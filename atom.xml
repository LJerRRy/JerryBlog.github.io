<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Never Git up</title>
  <subtitle>Better late than never</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wenjiewang.top/"/>
  <updated>2016-10-20T14:55:04.124Z</updated>
  <id>http://wenjiewang.top/</id>
  
  <author>
    <name>Jerry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>R Learnning</title>
    <link href="http://wenjiewang.top/2016/10/20/R-Summary/"/>
    <id>http://wenjiewang.top/2016/10/20/R-Summary/</id>
    <published>2016-10-20T14:48:19.000Z</published>
    <updated>2016-10-20T14:55:04.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="R语言学习"><a href="#R语言学习" class="headerlink" title="R语言学习"></a>R语言学习</h2><p>Everything in R is an <strong>object</strong>; Every object in R has a <strong>class</strong>;<br>一切皆对象，每个对象都有类；</p>
<h3 id="R基本语法"><a href="#R基本语法" class="headerlink" title="R基本语法"></a>R基本语法</h3><p>R语言也支持<strong>table键</strong>自动补全</p>
<h4 id="获取help"><a href="#获取help" class="headerlink" title="获取help"></a>获取help</h4><ol>
<li><code>&gt; help.start()</code>开启帮助文档</li>
<li><code>&gt;help(solve)</code> 显示某命令的帮助信息，或者 <code>&gt;?solve</code></li>
<li>对于由特殊字符指定的功能，这些参数必须用单引号或双引号括起来，使之成为一个“字符串”,如<code>&gt; help(&quot;[[&quot;)</code></li>
<li>与某个主题相关的例子通常可以用下面的命令得到<br><code>&gt; example(topic)</code></li>
</ol>
<h4 id="命令简介"><a href="#命令简介" class="headerlink" title="命令简介"></a>命令简介</h4><ol>
<li>R对大小写是敏感的；名称不能以数字开始；</li>
<li>基本的命令由表达式或者赋值语句组成。如果一个表达式被作为一条命令给出，它将被求值、打印而表达式的值并不被保存。一个赋值语句同样对表达式求值之后把表达式的值传给一个变量，不过并不会自动的被打印出来；</li>
<li>命令由分号(;)来分隔，或者另起新行；</li>
<li>基本命令可以由花括号(f和g)合并为一组复合表达式；</li>
<li>注释几乎可以被放在任何地方，只要是以井号( # )开始，到行末结束；</li>
<li>如果一个命令在行末仍没有结束，R将会给出一个不同的提示符，默认的是‘+’。</li>
</ol>
<h4 id="基本数据结构"><a href="#基本数据结构" class="headerlink" title="基本数据结构"></a>基本数据结构</h4><p>“numeric” is a class corresponding to numeric vectors. The other vector basic classes are “logical”, “integer”, “complex”, “character”, “raw”, “list” and “expression”.</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#1. 逻辑 TRUE,FALSE 只能大写，false，true等都不是</span></div><div class="line">v &lt;- <span class="literal">TRUE</span></div><div class="line">print(class(v))</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[1] "logical" </span></div><div class="line"></div><div class="line"><span class="comment">#2. 数字  12.3,5,999</span></div><div class="line">v &lt;- <span class="number">23.5</span></div><div class="line">print(class(v))</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[1] "numeric" </span></div><div class="line"></div><div class="line"><span class="comment">#3. 整数  2L, 34L, 0L </span></div><div class="line">v &lt;- <span class="number">2L</span> </div><div class="line">print(class(v))</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[1] "integer" </span></div><div class="line"></div><div class="line"><span class="comment">#4. 复数  3 + 2i </span></div><div class="line">v &lt;- <span class="number">3</span> + <span class="number">2i</span> </div><div class="line">print(class(v))</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[1] "complex"</span></div><div class="line"></div><div class="line"><span class="comment">#5.字符 'a' , '"good", "TRUE", '23.4' </span></div><div class="line">v &lt;- <span class="string">"Hello"</span></div><div class="line">print(class(v))</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[1] "character"</span></div><div class="line"></div><div class="line"><span class="comment">#6.原始  "Hello" 将被存储为 48 65 6c 6c 6f </span></div><div class="line">v &lt;- charToRaw(<span class="string">"Hello"</span>)</div><div class="line">print(class(v))</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[1] "raw"</span></div></pre></td></tr></table></figure>
<p>因此，在R语言中的非常基本的数据类型是R-对象，如上图所示占据着不同类别的元素向量。请注意R语言中类的数量并不只限于上述的六种类型。 例如，我们可以使用许多原子向量以及创建一个数组，它的类将成为数组。 </p>
<h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><ol>
<li>向量vector<br>当希望使用多个元素创建向量，应该使用<code>c()</code>函数，这意味着元素结合成一个向量。</li>
</ol>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">apple &lt;- c(<span class="string">'red'</span>,<span class="string">'green'</span>,<span class="string">"yellow"</span>)</div><div class="line">print(apple)</div><div class="line">print(class(apple))</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[1] "red" "green"  "yellow"</span></div><div class="line"><span class="comment">#[1] "character"</span></div></pre></td></tr></table></figure>
<ol>
<li>列表list<br>列表是R-对象，它里面可以包含多个不同类型的元素，如向量，函数，甚至是另一个列表。</li>
</ol>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">list1 &lt;- list(c(<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>),<span class="number">21.3</span>,sin)</div><div class="line">print(list1)</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#[[1]]</span></div><div class="line"><span class="comment">#[1] 2 5 3</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#[[2]]</span></div><div class="line"><span class="comment">#[1] 21.3</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#[[3]]</span></div><div class="line"><span class="comment">#function (x)  .Primitive("sin")</span></div></pre></td></tr></table></figure>
<ol>
<li>矩阵<br>矩阵是一个二维矩形数据集。它可以使用一个向量输入到矩阵函数来创建。 </li>
</ol>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">M = matrix( c(<span class="string">'a'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'b'</span>,<span class="string">'a'</span>), nrow=<span class="number">2</span>,ncol=<span class="number">3</span>,byrow = <span class="literal">TRUE</span>)</div><div class="line">print(M)</div><div class="line"><span class="comment">#输出</span></div><div class="line"><span class="comment">#     [,1] [,2] [,3]</span></div><div class="line"><span class="comment">#[1,] "a"  "a"  "b" </span></div><div class="line"><span class="comment">#[2,] "c"  "b"  "a"</span></div></pre></td></tr></table></figure>
<ol>
<li>数组<br>尽管矩阵限于两个维度，数组可以是任何数目的尺寸大小。数组函数使用它创建维度的所需数量的属性-dim。在下面的例子中，我们创建了两个元素数组，这是3×3矩阵。</li>
</ol>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a &lt;- array(c(<span class="string">'green'</span>,<span class="string">'yellow'</span>),dim=c(<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>))</div><div class="line">print(a)</div></pre></td></tr></table></figure>
<ol>
<li>因子<br>因子是使用向量创建的R对象。它存储随同该向量作为标记元素的不同值的向量。 标签始终是字符，而不论它在输入向量的是数字或字符或布尔等。它们在统计建模有用。<br>运用<code>factor()</code> 函数创建因子。nlevels 函数给出级别的计数。 </li>
</ol>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Create a vector.</span></div><div class="line">apple_colors &lt;- c(<span class="string">'green'</span>,<span class="string">'green'</span>,<span class="string">'yellow'</span>,<span class="string">'red'</span>,<span class="string">'red'</span>,<span class="string">'red'</span>,<span class="string">'green'</span>)</div><div class="line"></div><div class="line"><span class="comment"># Create a factor object.</span></div><div class="line">factor_apple &lt;- factor(apple_colors)</div><div class="line"></div><div class="line"><span class="comment"># Print the factor.</span></div><div class="line">print(factor_apple)</div><div class="line">print(nlevels(factor_apple))</div></pre></td></tr></table></figure>
<ol>
<li>数据帧<br>数据帧是表格数据对象。不像在数据帧的矩阵，每一列可以包含不同的数据的模型。第一列可以是数字，而第二列可能是字符和第三列可以是逻辑。它与向量列表的长度相等。<br>数据帧所使用 <code>data.frame()</code>函数来创建。 </li>
</ol>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Create the data frame.</span></div><div class="line">BMI &lt;- 	data.frame(</div><div class="line">			gender = c(<span class="string">"Male"</span>, <span class="string">"Male"</span>,<span class="string">"Female"</span>), </div><div class="line">			height = c(<span class="number">152</span>, <span class="number">171.5</span>, <span class="number">165</span>), </div><div class="line">			weight = c(<span class="number">81</span>,<span class="number">93</span>, <span class="number">78</span>),</div><div class="line">			Age =c(<span class="number">42</span>,<span class="number">38</span>,<span class="number">26</span>)</div><div class="line">			)</div><div class="line">print(BMI)</div></pre></td></tr></table></figure>
<h4 id="R语言变量与运算符"><a href="#R语言变量与运算符" class="headerlink" title="R语言变量与运算符"></a>R语言变量与运算符</h4><ol>
<li>变量命名规范<br>变量名由有字母，数字，<strong>点</strong>和下划线组成，数字不能开头，且若点开头，点<code>.</code>后不能跟一个数字</li>
</ol>
<p style="color:red;">.2invalid  2invalid  (非法命名)</p>

<p style="color:blue;">.v2alid  valid  (合法命名)</p>


<ol>
<li>变量赋值</li>
</ol>
<p>变量可以使用<strong>向左(&lt;-)</strong>，<strong>向右(-&gt;)</strong>或者<strong>等于</strong>操作符来分配值。可以使用 print() 或 cat() 函数打印变量的值。cat() 函数将多个项目并成连续并打印输出。 </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#c()函数用来新建一个向量</span></div><div class="line"><span class="comment"># Assignment using equal operator.</span></div><div class="line">var.1 = c(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)           </div><div class="line"></div><div class="line"><span class="comment"># Assignment using leftward operator.</span></div><div class="line">var.2 &lt;- c(<span class="string">"learn"</span>,<span class="string">"R"</span>)   </div><div class="line"></div><div class="line"><span class="comment"># Assignment using rightward operator.   </span></div><div class="line">c(<span class="literal">TRUE</span>,<span class="number">1</span>) -&gt; var.3           </div><div class="line"></div><div class="line">print(var.1)</div><div class="line">cat (<span class="string">"var.1 is "</span>, var.1 ,<span class="string">"\n"</span>)</div><div class="line">cat (<span class="string">"var.2 is "</span>, var.2 ,<span class="string">"\n"</span>)</div><div class="line">cat (<span class="string">"var.3 is "</span>, var.3 ,<span class="string">"\n"</span>)</div><div class="line"><span class="comment">#注意矢量c（TRUE，1）有逻辑和数值类的混合。因此，逻辑类强迫转换到数字类，如TRUE为1</span></div></pre></td></tr></table></figure>
<ol>
<li>变量的数据类型 </li>
</ol>
<p>在R，变量本身不需要声明成任何数据类型，但它得到分配给它的是 R-对象的数据类型。所以R被称为<strong>动态类型的语言</strong>，这意味着我们可以当在程序中使用它，并可再次并<strong>改变相同变量的变量的数据类型</strong>。<br><code>class()</code>函数用来查询参数的数据类型</p>
<ol>
<li>查找变量</li>
</ol>
<p>要知道目前在工作区中的可用变量，可以使用 <code>ls()</code>函数列出所有变量。另外，<code>ls()</code> 函数可以使用模式来匹配变量名称。<br>在 ls() 函数可以使用模式匹配变量名。<code>print(ls(pattern=&quot;var&quot;))</code>列出参数中包含var的参数名称。<br>以点(.) 开始的变量是隐藏的，它们可以使用 “all.names= TRUE” 参数给 <code>ls()</code>函数来列出。即<code>ls(all.name=TRUE)</code></p>
<ol>
<li>删除变量</li>
</ol>
<p>变量可以通过使用<code>rm()</code>函数来删除。下面我们删除变量<code>var.3</code>。然后再打印变量时出现异常错误。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rm(var.3)</div><div class="line">print(var.3)</div></pre></td></tr></table></figure>
<p>当上面的代码执行时，它产生以下结果： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[1] &quot;var.3&quot;</div><div class="line">Error in print(var.3) : object &apos;var.3&apos; not found</div></pre></td></tr></table></figure>
<p>所有的变量可以通过使用<code>rm()</code>和 <code>ls()</code>函数来一起删除。 </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rm(list=ls())</div><div class="line">print(ls())</div></pre></td></tr></table></figure>
<ol>
<li>算术运算符</li>
</ol>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#加法减法  两个向量相加、相减，下面给出加法的例子和结果 </span></div><div class="line">v &lt;- c( <span class="number">2</span>,<span class="number">5.5</span>,<span class="number">6</span>)</div><div class="line">t &lt;- c(<span class="number">8</span>, <span class="number">3</span>, <span class="number">4</span>)</div><div class="line">print(v+t)</div><div class="line"><span class="comment">#[1] 10.0  8.5  10.0</span></div><div class="line"></div><div class="line"><span class="comment">#乘法除法  两个向量乘、除，</span></div><div class="line">v &lt;- c( <span class="number">2</span>,<span class="number">5.5</span>,<span class="number">6</span>)</div><div class="line">t &lt;- c(<span class="number">8</span>, <span class="number">3</span>, <span class="number">4</span>)</div><div class="line">print(v/t)</div><div class="line"><span class="comment">#[1] 0.250000 1.833333 1.500000</span></div><div class="line"></div><div class="line"><span class="comment">#取余%% 得到第一矢量与第二个矢量余数 </span></div><div class="line">v &lt;- c( <span class="number">2</span>,<span class="number">5.5</span>,<span class="number">6</span>)</div><div class="line">t &lt;- c(<span class="number">8</span>, <span class="number">3</span>, <span class="number">4</span>)</div><div class="line">print(v%%t)</div><div class="line"><span class="comment">#[1] 2.0 2.5 2.0</span></div><div class="line"></div><div class="line"><span class="comment">#%/% 第一个向量与第二（商）相除的结果 ，保留整数（即整除）</span></div><div class="line">v &lt;- c( <span class="number">2</span>,<span class="number">5.5</span>,<span class="number">6</span>)</div><div class="line">t &lt;- c(<span class="number">8</span>, <span class="number">3</span>, <span class="number">4</span>)</div><div class="line">print(v%/%t)</div><div class="line"><span class="comment">#[1] 0 1 1</span></div><div class="line"></div><div class="line"><span class="comment">#^ 第一向量提升到第二向量的指数 </span></div><div class="line">v &lt;- c( <span class="number">2</span>,<span class="number">5.5</span>,<span class="number">6</span>)</div><div class="line">t &lt;- c(<span class="number">8</span>, <span class="number">3</span>, <span class="number">4</span>)</div><div class="line">print(v^t)</div><div class="line"><span class="comment">#[1]  256.000  166.375 1296.000</span></div></pre></td></tr></table></figure>
<ol>
<li><p>关系运算符、逻辑运算符和其他运算符</p>
</li>
<li><p>关系运算符<code>&gt;,&lt;,&gt;=,&lt;=,==,!=</code></p>
</li>
<li>逻辑运算符<code>&amp; | !</code>第一向量的每个元素与所述第二向量的相应元素进行比较。比较的结果是一个布尔值。<br>所有数值大于1则认为逻辑值为TRUE。<strong>复数的逻辑值为TRUE</strong><br>逻辑运算符<code>&amp;&amp;</code>和<code>||</code>考虑矢量仅第一元素并给单个元素作为输出的向量。</li>
<li>其他运算符</li>
</ol>
<p><code>:</code>冒号运算符。它创建顺序一系列数字的向量 </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">v &lt;- <span class="number">2</span>:<span class="number">8</span></div><div class="line">print(v) </div><div class="line"><span class="comment">#[1] 2 3 4 5 6 7 8</span></div></pre></td></tr></table></figure>
<p><code>%in%</code> 这个操作符用于识别一个元素是否属于（在）一个向量。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">v1 &lt;- <span class="number">8</span></div><div class="line">v2 &lt;- <span class="number">12</span></div><div class="line">t &lt;- <span class="number">1</span>:<span class="number">10</span></div><div class="line">print(v1 %<span class="keyword">in</span>% t) </div><div class="line">print(v2 %<span class="keyword">in</span>% t) </div><div class="line"><span class="comment">#[1] TRUE</span></div><div class="line"><span class="comment">#[1] FALSE </span></div><div class="line">``` </div><div class="line"></div><div class="line">`%*% `这个操作符是用来乘以它的转置矩阵。 </div><div class="line"></div><div class="line">```R</div><div class="line"><span class="comment">#t()函数矩阵转置</span></div><div class="line">M = matrix( c(<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">4</span>), nrow=<span class="number">2</span>,ncol=<span class="number">3</span>,byrow = <span class="literal">TRUE</span>)</div><div class="line">t = M %*% t(M)</div><div class="line">print(t)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;R语言学习&quot;&gt;&lt;a href=&quot;#R语言学习&quot; class=&quot;headerlink&quot; title=&quot;R语言学习&quot;&gt;&lt;/a&gt;R语言学习&lt;/h2&gt;&lt;p&gt;Everything in R is an &lt;strong&gt;object&lt;/strong&gt;; Every objec
    
    </summary>
    
      <category term="学习笔记" scheme="http://wenjiewang.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="R" scheme="http://wenjiewang.top/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>Chapter Two and One</title>
    <link href="http://wenjiewang.top/2016/09/28/Chapter-Four/"/>
    <id>http://wenjiewang.top/2016/09/28/Chapter-Four/</id>
    <published>2016-09-28T04:11:05.000Z</published>
    <updated>2016-09-29T13:59:28.255Z</updated>
    
    <content type="html"><![CDATA[<p>算法导论（Introduction to Algorithm）</p>
<h3 id="最短路径和旅行商问题"><a href="#最短路径和旅行商问题" class="headerlink" title="最短路径和旅行商问题"></a>最短路径和旅行商问题</h3><p>相似之处：都是寻求最短的路线<br>不同之处：最短路线问题是从若干条可选线路中选择一条线路使之在两个点之间达到交通路径最短，不需要经过所有的点；旅行商人问题中如果把仓库看做是图中的一个<br>点的话，首先要满足遍历所有的点，然后在所有满足的线路中选择最短的线路，其复杂程度要高于最短路径。</p>
<h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p>插入算法的设计使用的是增量（incremental）方法：在排好子数组A[1..j-1]后，将元素A[j]插入，形成排好序的子数组A[1..j]。伪代码如下，伪代码中<strong>数组是从1开始的</strong>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">INSERTION-SORT(A)</div><div class="line">1 for j = 2 to length[A]</div><div class="line">2   key = A[j]</div><div class="line">3   //Insert A[j] into the sorted sequence A[1..j-1]</div><div class="line">4   i = j-1</div><div class="line">5   while i &gt; 0 and A[i] &gt; key</div><div class="line">6       A[i+1]=A[i]</div><div class="line">7       i = i − 1</div><div class="line">8   A[i+1]=key</div></pre></td></tr></table></figure>
<p>插入排序的java算法如下</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertSort</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inserSort</span><span class="params">(<span class="keyword">int</span>[] a)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> len = a.length;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;len;j++)&#123;</div><div class="line">            <span class="keyword">int</span> key = a[j];</div><div class="line">            <span class="keyword">int</span> i = j-<span class="number">1</span>;</div><div class="line">            <span class="keyword">while</span>(i&gt;=<span class="number">0</span>&amp;&amp;a[i]&gt;key)&#123;</div><div class="line">                a[i+<span class="number">1</span>]=a[i];</div><div class="line">                i--;</div><div class="line">            &#125;</div><div class="line">            a[i+<span class="number">1</span>]=key;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        InsertSort is = <span class="keyword">new</span> InsertSort();</div><div class="line">        <span class="keyword">int</span> num=<span class="number">100</span>;</div><div class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[num];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            a[i]= (<span class="keyword">int</span>) (Math.random()*num);<span class="comment">//Math.random()随机产生[0,1]的双精度浮点数</span></div><div class="line">        is.inserSort(a);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            System.out.print(a[i]+<span class="string">" "</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="循环不变式"><a href="#循环不变式" class="headerlink" title="循环不变式"></a>循环不变式</h3><p>循环不变式(Loop Invariant)是证明算法正确性的一个重要工具。对于循环不变式，必须证明它的三个性质：<br><br><strong>初始化(Initialization)</strong>：它在循环的第一轮迭代开始之前，应该是正确的。 <br><br><strong>保持(Maintenance)</strong>：如果在循环的某一次迭代开始之前它是正确的，那么，在下一次迭代开始之前，它也是正确的。<br><strong>终止(Termination)</strong>：当循环结束时，不变式给了我们一个有用的性质，它有助于表明算法是正确的。 <br></p>
<p>运用循环不变式对插入排序算法的正确性进行证明：<br><strong>初始化</strong>：j=2，子数组 A[1..j-1]只包含一个元素 A[1],显然它是已排序的。<br><strong>保持</strong>： 若A[1..j-1]是已排序的， 则按照大小确定了插入元素 A[j]位置之后的数组A[1..j]显然也是已排序的。<br><strong>终止</strong>：当 j=n+1 时，退出循环，此时已排序的数组是由 A[1],A[2],A[3]…A[n]组成的A[1..n]，此即原始数组 A。</p>
<h3 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h3><p><strong>分治法（divide-and-conquer）</strong>:有很多算法在结构上是递归的：为了解决一个给定的问题，算法要一次戒多次地递归调用其自身来解决相关的问题。这些算法通常采用分治策略：将原问题划分成 n 个规模较小而结构不原问题相似的子问题；递归地解决这些子问题，然后再合并其结果，就得到原问题的解。</p>
<p>分治模式在每一层递归上都有三个步骤：<br><strong>分解（Divide）</strong>：将原问题分解成一系列子问题；<br><strong>解决（Conquer）</strong>：递归地解各子问题。若子问题足够小，则直接求解；<br><strong>合并（Combine）</strong>：将子问题的结果合并成原问题的解。</p>
<h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><p>归并排序是基于分治法。<br><strong>分解</strong>：将 n 个元素分成各含 n/2 个元素的子序列；<br><strong>解决</strong>：用合并排序法对两个子序列递归地排序；<br><strong>合并</strong>：合并两个已排序的子序列以得到排序结果。<br>归并排序伪代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">MERGE(A,p,q,r)</div><div class="line">1 n1 = q − p + 1</div><div class="line">2 n2 = r − q</div><div class="line">3 create arrays L[1..n1 + 1] and R[1..n2 + 1]</div><div class="line">4 for i = 1 to n1</div><div class="line">5   L[i]=A[p+i-1]</div><div class="line">6 for j=1 to n2</div><div class="line">7   R[j]=A[q+j]</div><div class="line">8 L[n1 + 1]= ∞</div><div class="line">9 R[n2 + 1]= ∞</div><div class="line">10 i = 1</div><div class="line">11 j = 1</div><div class="line">12 for k =p to r</div><div class="line">13  if L[i]≤R[j]</div><div class="line">14      A[k]=L[i]</div><div class="line">15      i = i + 1</div><div class="line">16  else A[k]=R[j]</div><div class="line">17      j = j + 1</div><div class="line">MERGE-SORT(A,p,r)</div><div class="line">1 if p&lt;r</div><div class="line">2   q= (p+r)/2</div><div class="line">3   MERGE-SORT(A,p,r)</div><div class="line">4   MERGE-SORT(A,q+1,r)</div><div class="line">5   MERGE-SORT(A,p,q,r)</div></pre></td></tr></table></figure>
<p>java代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Merge</span> </span>&#123;</div><div class="line">    <span class="comment">//归并算法</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] a,<span class="keyword">int</span> p,<span class="keyword">int</span> q,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> []m = <span class="keyword">new</span> <span class="keyword">int</span>[q-p+<span class="number">1</span>];</div><div class="line">        <span class="keyword">int</span> []n = <span class="keyword">new</span> <span class="keyword">int</span>[r-q];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=p;j&lt;=q;i++,j++)</div><div class="line">            m[i]=a[j];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=q+<span class="number">1</span>;j&lt;=r;i++,j++)</div><div class="line">            n[i]=a[j];</div><div class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(i&lt;m.length&amp;&amp;j&lt;n.length)&#123;</div><div class="line">            <span class="keyword">if</span>(m[i]&gt;n[j])a[p++]=n[j++];</div><div class="line">            <span class="keyword">else</span> a[p++]=m[i++];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">while</span>(i&lt;m.length)a[p++]=m[i++];</div><div class="line">        <span class="keyword">while</span>(j&lt;n.length)a[p++]=n[j++];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//递归进行归并排序</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(<span class="keyword">int</span>[]a,<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(p&lt;r)&#123;</div><div class="line">            <span class="keyword">int</span> q=(p+r)/<span class="number">2</span>;</div><div class="line">            merge_sort(a,p,q);</div><div class="line">            merge_sort(a,q+<span class="number">1</span>,r);</div><div class="line">            merge(a,p,q,r);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Merge merge = <span class="keyword">new</span> Merge();</div><div class="line">        <span class="keyword">int</span> num=<span class="number">100</span>;</div><div class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[num];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            a[i]= (<span class="keyword">int</span>) (Math.random()*num);<span class="comment">//Math.random()随机产生[0,1]的双精度浮点数</span></div><div class="line">        merge.merge_sort(a,<span class="number">0</span>,num-<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            System.out.print(a[i]+<span class="string">" "</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法导论（Introduction to Algorithm）&lt;/p&gt;
&lt;h3 id=&quot;最短路径和旅行商问题&quot;&gt;&lt;a href=&quot;#最短路径和旅行商问题&quot; class=&quot;headerlink&quot; title=&quot;最短路径和旅行商问题&quot;&gt;&lt;/a&gt;最短路径和旅行商问题&lt;/h3&gt;&lt;p
    
    </summary>
    
      <category term="算法导论" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    
    
      <category term="sort" scheme="http://wenjiewang.top/tags/sort/"/>
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Chapter Two and One</title>
    <link href="http://wenjiewang.top/2016/09/28/Chapter-Two/"/>
    <id>http://wenjiewang.top/2016/09/28/Chapter-Two/</id>
    <published>2016-09-28T04:11:05.000Z</published>
    <updated>2016-09-29T13:59:28.255Z</updated>
    
    <content type="html"><![CDATA[<p>算法导论（Introduction to Algorithm）</p>
<h3 id="最短路径和旅行商问题"><a href="#最短路径和旅行商问题" class="headerlink" title="最短路径和旅行商问题"></a>最短路径和旅行商问题</h3><p>相似之处：都是寻求最短的路线<br>不同之处：最短路线问题是从若干条可选线路中选择一条线路使之在两个点之间达到交通路径最短，不需要经过所有的点；旅行商人问题中如果把仓库看做是图中的一个<br>点的话，首先要满足遍历所有的点，然后在所有满足的线路中选择最短的线路，其复杂程度要高于最短路径。</p>
<h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p>插入算法的设计使用的是增量（incremental）方法：在排好子数组A[1..j-1]后，将元素A[j]插入，形成排好序的子数组A[1..j]。伪代码如下，伪代码中<strong>数组是从1开始的</strong>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">INSERTION-SORT(A)</div><div class="line">1 for j = 2 to length[A]</div><div class="line">2   key = A[j]</div><div class="line">3   //Insert A[j] into the sorted sequence A[1..j-1]</div><div class="line">4   i = j-1</div><div class="line">5   while i &gt; 0 and A[i] &gt; key</div><div class="line">6       A[i+1]=A[i]</div><div class="line">7       i = i − 1</div><div class="line">8   A[i+1]=key</div></pre></td></tr></table></figure>
<p>插入排序的java算法如下</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertSort</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inserSort</span><span class="params">(<span class="keyword">int</span>[] a)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> len = a.length;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;len;j++)&#123;</div><div class="line">            <span class="keyword">int</span> key = a[j];</div><div class="line">            <span class="keyword">int</span> i = j-<span class="number">1</span>;</div><div class="line">            <span class="keyword">while</span>(i&gt;=<span class="number">0</span>&amp;&amp;a[i]&gt;key)&#123;</div><div class="line">                a[i+<span class="number">1</span>]=a[i];</div><div class="line">                i--;</div><div class="line">            &#125;</div><div class="line">            a[i+<span class="number">1</span>]=key;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        InsertSort is = <span class="keyword">new</span> InsertSort();</div><div class="line">        <span class="keyword">int</span> num=<span class="number">100</span>;</div><div class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[num];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            a[i]= (<span class="keyword">int</span>) (Math.random()*num);<span class="comment">//Math.random()随机产生[0,1]的双精度浮点数</span></div><div class="line">        is.inserSort(a);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            System.out.print(a[i]+<span class="string">" "</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="循环不变式"><a href="#循环不变式" class="headerlink" title="循环不变式"></a>循环不变式</h3><p>循环不变式(Loop Invariant)是证明算法正确性的一个重要工具。对于循环不变式，必须证明它的三个性质：<br><br><strong>初始化(Initialization)</strong>：它在循环的第一轮迭代开始之前，应该是正确的。 <br><br><strong>保持(Maintenance)</strong>：如果在循环的某一次迭代开始之前它是正确的，那么，在下一次迭代开始之前，它也是正确的。<br><strong>终止(Termination)</strong>：当循环结束时，不变式给了我们一个有用的性质，它有助于表明算法是正确的。 <br></p>
<p>运用循环不变式对插入排序算法的正确性进行证明：<br><strong>初始化</strong>：j=2，子数组 A[1..j-1]只包含一个元素 A[1],显然它是已排序的。<br><strong>保持</strong>： 若A[1..j-1]是已排序的， 则按照大小确定了插入元素 A[j]位置之后的数组A[1..j]显然也是已排序的。<br><strong>终止</strong>：当 j=n+1 时，退出循环，此时已排序的数组是由 A[1],A[2],A[3]…A[n]组成的A[1..n]，此即原始数组 A。</p>
<h3 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h3><p><strong>分治法（divide-and-conquer）</strong>:有很多算法在结构上是递归的：为了解决一个给定的问题，算法要一次戒多次地递归调用其自身来解决相关的问题。这些算法通常采用分治策略：将原问题划分成 n 个规模较小而结构不原问题相似的子问题；递归地解决这些子问题，然后再合并其结果，就得到原问题的解。</p>
<p>分治模式在每一层递归上都有三个步骤：<br><strong>分解（Divide）</strong>：将原问题分解成一系列子问题；<br><strong>解决（Conquer）</strong>：递归地解各子问题。若子问题足够小，则直接求解；<br><strong>合并（Combine）</strong>：将子问题的结果合并成原问题的解。</p>
<h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><p>归并排序是基于分治法。<br><strong>分解</strong>：将 n 个元素分成各含 n/2 个元素的子序列；<br><strong>解决</strong>：用合并排序法对两个子序列递归地排序；<br><strong>合并</strong>：合并两个已排序的子序列以得到排序结果。<br>归并排序伪代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">MERGE(A,p,q,r)</div><div class="line">1 n1 = q − p + 1</div><div class="line">2 n2 = r − q</div><div class="line">3 create arrays L[1..n1 + 1] and R[1..n2 + 1]</div><div class="line">4 for i = 1 to n1</div><div class="line">5   L[i]=A[p+i-1]</div><div class="line">6 for j=1 to n2</div><div class="line">7   R[j]=A[q+j]</div><div class="line">8 L[n1 + 1]= ∞</div><div class="line">9 R[n2 + 1]= ∞</div><div class="line">10 i = 1</div><div class="line">11 j = 1</div><div class="line">12 for k =p to r</div><div class="line">13  if L[i]≤R[j]</div><div class="line">14      A[k]=L[i]</div><div class="line">15      i = i + 1</div><div class="line">16  else A[k]=R[j]</div><div class="line">17      j = j + 1</div><div class="line">MERGE-SORT(A,p,r)</div><div class="line">1 if p&lt;r</div><div class="line">2   q= (p+r)/2</div><div class="line">3   MERGE-SORT(A,p,r)</div><div class="line">4   MERGE-SORT(A,q+1,r)</div><div class="line">5   MERGE-SORT(A,p,q,r)</div></pre></td></tr></table></figure>
<p>java代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Merge</span> </span>&#123;</div><div class="line">    <span class="comment">//归并算法</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] a,<span class="keyword">int</span> p,<span class="keyword">int</span> q,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> []m = <span class="keyword">new</span> <span class="keyword">int</span>[q-p+<span class="number">1</span>];</div><div class="line">        <span class="keyword">int</span> []n = <span class="keyword">new</span> <span class="keyword">int</span>[r-q];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=p;j&lt;=q;i++,j++)</div><div class="line">            m[i]=a[j];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=q+<span class="number">1</span>;j&lt;=r;i++,j++)</div><div class="line">            n[i]=a[j];</div><div class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(i&lt;m.length&amp;&amp;j&lt;n.length)&#123;</div><div class="line">            <span class="keyword">if</span>(m[i]&gt;n[j])a[p++]=n[j++];</div><div class="line">            <span class="keyword">else</span> a[p++]=m[i++];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">while</span>(i&lt;m.length)a[p++]=m[i++];</div><div class="line">        <span class="keyword">while</span>(j&lt;n.length)a[p++]=n[j++];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//递归进行归并排序</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(<span class="keyword">int</span>[]a,<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(p&lt;r)&#123;</div><div class="line">            <span class="keyword">int</span> q=(p+r)/<span class="number">2</span>;</div><div class="line">            merge_sort(a,p,q);</div><div class="line">            merge_sort(a,q+<span class="number">1</span>,r);</div><div class="line">            merge(a,p,q,r);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Merge merge = <span class="keyword">new</span> Merge();</div><div class="line">        <span class="keyword">int</span> num=<span class="number">100</span>;</div><div class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[num];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            a[i]= (<span class="keyword">int</span>) (Math.random()*num);<span class="comment">//Math.random()随机产生[0,1]的双精度浮点数</span></div><div class="line">        merge.merge_sort(a,<span class="number">0</span>,num-<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;num;i++)</div><div class="line">            System.out.print(a[i]+<span class="string">" "</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法导论（Introduction to Algorithm）&lt;/p&gt;
&lt;h3 id=&quot;最短路径和旅行商问题&quot;&gt;&lt;a href=&quot;#最短路径和旅行商问题&quot; class=&quot;headerlink&quot; title=&quot;最短路径和旅行商问题&quot;&gt;&lt;/a&gt;最短路径和旅行商问题&lt;/h3&gt;&lt;p
    
    </summary>
    
      <category term="算法导论" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    
    
      <category term="sort" scheme="http://wenjiewang.top/tags/sort/"/>
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Palindrome Number</title>
    <link href="http://wenjiewang.top/2016/09/20/Leetcode-9/"/>
    <id>http://wenjiewang.top/2016/09/20/Leetcode-9/</id>
    <published>2016-09-19T16:12:12.000Z</published>
    <updated>2016-09-19T16:47:19.820Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problemset/algorithms/" target="_blank" rel="external">Leetcoode</a>上的第8题</p>
<h1 id="题目9-SPalindrome-Number"><a href="#题目9-SPalindrome-Number" class="headerlink" title="题目9 SPalindrome Number"></a>题目9 SPalindrome Number</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Determine whether an integer is a palindrome. Do this without extra space.</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>求一个整数是否为回文数字。</p>
<ol>
<li>0~9肯定是回文数字，负数也不是（开始以为负数也要判断其是否为回文）。</li>
<li>将整数从最低位开始向最高位进行比较，不需要转换为字符串。</li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(x&lt;<span class="number">10</span>&amp;&amp;x&gt;=<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//0~9</span></div><div class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">false</span>;<span class="comment">//负数</span></div><div class="line">        <span class="keyword">int</span> y = x;</div><div class="line">        <span class="keyword">int</span> m = <span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> c = <span class="number">0</span>;<span class="comment">//c来存储整数的位数</span></div><div class="line">        <span class="keyword">while</span>(y/<span class="number">10</span>!=<span class="number">0</span>)&#123;<span class="comment">//计算整数x有几位</span></div><div class="line">            y/=<span class="number">10</span>;</div><div class="line">            m*=<span class="number">10</span>;</div><div class="line">            c++;</div><div class="line">        &#125;</div><div class="line">        c++;</div><div class="line">        y=x;<span class="comment">//x,y，分别代表从高位和从低位开始</span></div><div class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</div><div class="line">            <span class="keyword">int</span> t = x/m;<span class="comment">//高位的值</span></div><div class="line">            <span class="keyword">int</span> p = y%<span class="number">10</span>;<span class="comment">//低位的值</span></div><div class="line">            <span class="keyword">if</span>(t!=p)<span class="keyword">return</span> <span class="keyword">false</span>;<span class="comment">//若不相等则肯定不为回文</span></div><div class="line">            <span class="keyword">if</span>(c==<span class="number">0</span>||c==<span class="number">1</span>)<span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//若c=0或者c=1代表以及比较完毕，肯定为回文。</span></div><div class="line">            x=x%m;<span class="comment">//去掉高位值</span></div><div class="line">            m=m/<span class="number">10</span>;</div><div class="line">            y=y/<span class="number">10</span>;<span class="comment">//去掉低位</span></div><div class="line">            c=c-<span class="number">2</span>;<span class="comment">//位数减2</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<p>该方法参考的discuss上的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">*1. 将整数x分为两部分，前半部分保存在x，后半部分逆序后保存在v中，</div><div class="line">*2. 其中x&gt;v，即若x的位数为奇数时，x则比v多一位。若x&gt;v，x=x/10</div><div class="line">*3. 然后再判断x是否和v相等</div><div class="line">*4. 这个方法效率z高</div><div class="line">*/</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">int</span> v;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">        <span class="comment">//optimizations</span></div><div class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span>(x&lt;<span class="number">10</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span>(x%<span class="number">10</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span>(x&lt;<span class="number">100</span>&amp;&amp;x%<span class="number">11</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span>(x&lt;<span class="number">1000</span>&amp;&amp;((x/<span class="number">100</span>)*<span class="number">10</span>+x%<span class="number">10</span>)%<span class="number">11</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"></div><div class="line">        <span class="comment">//actual logic</span></div><div class="line">        v=x%<span class="number">10</span>;</div><div class="line">        x=x/<span class="number">10</span>;</div><div class="line">        <span class="keyword">while</span>(x-v&gt;<span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">                v=v*<span class="number">10</span>+x%<span class="number">10</span>;</div><div class="line">                x/=<span class="number">10</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(v&gt;x)&#123;v/=<span class="number">10</span>;&#125;</div><div class="line">        <span class="keyword">return</span> v==x?<span class="keyword">true</span>:<span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problemset/algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode&lt;/a&gt;上的第8题&lt;/p&gt;
&lt;h1 id=&quot;题目9-SPalindrome-Numbe
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-396-399</title>
    <link href="http://wenjiewang.top/2016/09/12/Leetcode-396-399/"/>
    <id>http://wenjiewang.top/2016/09/12/Leetcode-396-399/</id>
    <published>2016-09-12T14:53:21.000Z</published>
    <updated>2016-10-11T06:11:34.627Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/contest/detail/4" target="_blank" rel="external">Leetcoode  Weekly Contest 4</a>总共有四道题</p>
<h1 id="题目389-Find-the-Difference"><a href="#题目389-Find-the-Difference" class="headerlink" title="题目389 Find the Difference"></a>题目389 Find the Difference</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Given an array of integers <code>A</code> and let <code>n</code> to be its length.</p>
<p>Assume Bk to be an array obtained by rotating the array <code>A</code> k positions clock-wise, we define a “rotation function” <code>F</code> on <code>A</code> as follow:</p>
<p><code>F(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1]</code>.</p>
<p>Calculate the maximum value of <code>F(0), F(1), ..., F(n-1)</code>.</p>
<p>Note:<br>n is guaranteed to be less than 105.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">A = [4, 3, 2, 6]</div><div class="line"></div><div class="line">F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25</div><div class="line">F(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16</div><div class="line">F(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23</div><div class="line">F(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26</div><div class="line"></div><div class="line">So the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.</div></pre></td></tr></table></figure>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ul>
<li><strong>方法一</strong>  强行求每个F(n)的值，然后保留最大的，（超时）</li>
<li><strong>方法二</strong>  注意到如下规则：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Sum(A)为数组A元素的和，len为数组长度</span></div><div class="line">F(<span class="number">0</span>)=<span class="number">0</span>*A[<span class="number">0</span>]+<span class="number">1</span>*A[<span class="number">1</span>]+...+(n-<span class="number">1</span>)*A[n-<span class="number">1</span>]</div><div class="line">F(<span class="number">1</span>)=F(<span class="number">0</span>)+Sum(A) - A[len -<span class="number">1</span>]*len</div><div class="line">...</div><div class="line">F(n-<span class="number">1</span>)=F(n-<span class="number">1</span>)+Sum(A) - A[len-n+<span class="number">1</span>]*len</div></pre></td></tr></table></figure>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//该方法超时，不能通过</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">maxRotateFunction</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> max = Integer.MIN_VALUE;<span class="comment">//初始化为最小值</span></div><div class="line">    <span class="keyword">int</span> len = A.length;</div><div class="line">    <span class="keyword">if</span>(len&lt;<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//如果为空返回0</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;len;i++)&#123;</div><div class="line">        <span class="keyword">int</span> m = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)&#123;</div><div class="line">            <span class="keyword">int</span> s = (len-i+j)%len;<span class="comment">//倒置函数</span></div><div class="line">            m = m + j * A[s];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(m&gt;max)max = m;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> max; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxRotateFunction</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> len = A.length;</div><div class="line">        <span class="keyword">if</span>(len&lt;<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> s = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;len;i++)&#123;</div><div class="line">           count  = count + i*A[i];<span class="comment">//计算F(0)</span></div><div class="line">           s += A[i];<span class="comment">//计算Sum(A)</span></div><div class="line">        &#125;</div><div class="line">        max = count;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;len;i++)&#123;</div><div class="line">            count = count + s - A[len-i]*len;<span class="comment">//计算F(i)</span></div><div class="line">            <span class="keyword">if</span>(count &gt; max)max = count;<span class="comment">//就行比较或者用max=Math.max(max,count);</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> max;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h1 id="题目397-Integer-Replacement"><a href="#题目397-Integer-Replacement" class="headerlink" title="题目397 Integer Replacement"></a>题目397 Integer Replacement</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p>Given a positive integer n and you can do operations as follow:</p>
<ol>
<li>If n is even, replace n with n/2.</li>
<li>If n is odd, you can replace n with either n + 1 or n - 1.</li>
</ol>
<p>What is the minimum number of replacements needed for n to become 1?</p>
<p><strong>Example1:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Input:</div><div class="line">8</div><div class="line"></div><div class="line">Output:</div><div class="line">3</div><div class="line"></div><div class="line">Explanation:</div><div class="line">8 -&gt; 4 -&gt; 2 -&gt; 1</div></pre></td></tr></table></figure>
<p><strong>Example2:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Input:</div><div class="line">7</div><div class="line"></div><div class="line">Output:</div><div class="line">4</div><div class="line"></div><div class="line">Explanation:</div><div class="line">7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1</div><div class="line">or</div><div class="line">7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1</div></pre></td></tr></table></figure>
<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>题目看起来比较简单，就是求一个<strong>正整数</strong>转换成1，<strong>最少</strong>需要多少次变化，变化的过程是指：</p>
<ol>
<li>整数n为偶数则n=n/2</li>
<li>整数n为奇数则n=(n+1)/2或者n=(n-1)/2</li>
</ol>
<ul>
<li><strong>方法一</strong>  用递归，不过要注意到java中int的范围是-2147483648到2147483647，若n=2147483647时只能做减法,而且还要和(n+1)/2进行比较;n=1时为递归中值条件，否则则取(n+1)/2和(n-1)/2所求得最小值</li>
<li><strong>方法二</strong>  也是用递归，但是用的是<strong>BFS(广度优先搜索算法)</strong>，用队列来保存每次转换的可能值，下次遍历队列，继续遍历队列，直至有一个值为1（表示递归结束，已经找到最小值）。</li>
</ul>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">integerReplacement</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="comment">//由于int不能超过2147483647，只能手动计算(2147483647 + 1)的变化值，然后进行比较取最小值</span></div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2147483647</span>)</div><div class="line">        <span class="keyword">return</span> Math.min(<span class="number">1</span>+integerReplacement(<span class="number">2147483647</span>-<span class="number">1</span>),<span class="number">2</span>+integerReplacement((<span class="number">2147483646</span>/<span class="number">2</span>) + <span class="number">1</span>));</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((n&amp;<span class="number">1</span>)==<span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>+integerReplacement(n/<span class="number">2</span>);</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">2</span> + Math.min(integerReplacement((n+<span class="number">1</span>)/<span class="number">2</span>),integerReplacement(n/<span class="number">2</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">integerReplacement</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">       <span class="keyword">assert</span> n &gt; <span class="number">0</span>;</div><div class="line">       Queue&lt;Long&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();<span class="comment">//一定是long型的队列，不然要分类讨论</span></div><div class="line">       <span class="comment">//n进队</span></div><div class="line">       queue.offer((<span class="keyword">long</span>)n);</div><div class="line">       <span class="keyword">return</span> bfs(queue, <span class="number">0</span>);<span class="comment">//初始化的队列只有一个值，level初始值0，因为n可能为1.</span></div><div class="line">   &#125;</div><div class="line">   </div><div class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">bfs</span><span class="params">(Queue&lt;Long&gt; oldqueue, <span class="keyword">int</span> level)</span> </span>&#123;</div><div class="line">       Queue&lt;Long&gt; newqueue = <span class="keyword">new</span> LinkedList&lt;&gt;();<span class="comment">//新建一个队列用来保存</span></div><div class="line">       <span class="keyword">while</span> (!oldqueue.isEmpty()) &#123;</div><div class="line">           <span class="keyword">long</span> n = oldqueue.poll();<span class="comment">//出队</span></div><div class="line">           <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</div><div class="line">               <span class="keyword">return</span> level;</div><div class="line">           &#125;</div><div class="line">           <span class="comment">//进队，到新的队列</span></div><div class="line">           <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</div><div class="line">               newqueue.offer(n / <span class="number">2</span>);</div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               newqueue.offer(n + <span class="number">1</span>);</div><div class="line">               newqueue.offer(n - <span class="number">1</span>);</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">return</span> bfs(newqueue, level + <span class="number">1</span>);<span class="comment">//继续将新的队列递归</span></div><div class="line">   &#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/contest/detail/4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode  Weekly Contest 4&lt;/a&gt;总共有四道题&lt;/p&gt;
&lt;h1 id=&quot;题目389-Fi
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
      <category term="BFS" scheme="http://wenjiewang.top/tags/BFS/"/>
    
  </entry>
  
  <entry>
    <title>String to Integer (atoi)</title>
    <link href="http://wenjiewang.top/2016/09/11/Leetcode-8/"/>
    <id>http://wenjiewang.top/2016/09/11/Leetcode-8/</id>
    <published>2016-09-11T05:15:24.000Z</published>
    <updated>2016-09-15T10:09:09.254Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problemset/algorithms/" target="_blank" rel="external">Leetcoode</a>上的第8题</p>
<h1 id="题目8-String-to-Integer-atoi）"><a href="#题目8-String-to-Integer-atoi）" class="headerlink" title="题目8 String to Integer (atoi）"></a>题目8 String to Integer (atoi）</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Implement <code>atoi</code> to convert a string to an integer.</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>把字符串转换成整型数。</p>
<ol>
<li>函数跳过前面的空格字符，然后从第一个字符开始只能为<code>+</code>，<code>-</code>或者<code>数字</code>,之后跟着一串数字。</li>
<li>首先去掉字符串开始的空格字符，然后判断第一个字符是否为<code>+</code>,<code>-</code>或者<code>数字</code>，若不是则返回0；</li>
<li>判断最后解析出来的数字是否溢出，上溢则返回<code>INT_MAX (2147483647)</code>,下溢则返回<code>INT_MIN (-2147483648)</code></li>
<li>一定要用<strong>double</strong>来保存整数，不能用long，因为测试用例中比long还大的数。</li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="comment">//判断一个字符是否为数字</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isNum</span><span class="params">(<span class="keyword">char</span> s)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(s&gt;=<span class="string">'0'</span>&amp;&amp;s&lt;=<span class="string">'9'</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//我的方法有点乱。。</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">double</span> s = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;<span class="comment">//用来保存+，-，若为-，flag=-1</span></div><div class="line">        <span class="keyword">int</span> size =<span class="number">0</span>;<span class="comment">//记录+-符号的个数</span></div><div class="line">        <span class="keyword">int</span> j;</div><div class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;str.length();++j)<span class="keyword">if</span>(str.charAt(j)!=<span class="string">' '</span>)<span class="keyword">break</span>;<span class="comment">//去除空格</span></div><div class="line">        <span class="keyword">if</span>(j&lt;str.length()&amp;&amp;str.charAt(j)!=<span class="string">'-'</span>&amp;&amp;str.charAt(j)!=<span class="string">'+'</span>&amp;&amp;!isNum(str.charAt(j)))<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//不满足条件2直接返回0</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = j;i&lt;str.length();i++)&#123;</div><div class="line">            <span class="keyword">char</span> ch = str.charAt(i);</div><div class="line">            <span class="keyword">if</span>(ch==<span class="string">'-'</span>||ch==<span class="string">'+'</span>)&#123;</div><div class="line">                size++;</div><div class="line">                <span class="keyword">if</span>(size&gt;<span class="number">1</span>)&#123;<span class="comment">//符号的个数&gt;1，跳出循环</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="comment">//判断符号后若不为数字或者该符号在字符串最后则返回0                </span></div><div class="line">                <span class="keyword">if</span>(i&lt;str.length()-<span class="number">1</span>&amp;&amp;!isNum(str.charAt(i+<span class="number">1</span>))||i==str.length()-<span class="number">1</span>) &#123;</div><div class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">                &#125;</div><div class="line">                flag = ch==<span class="string">'-'</span>?-<span class="number">1</span>:<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">if</span>(isNum(ch)) &#123;</div><div class="line">                    s = s * <span class="number">10</span> + ch - <span class="string">'0'</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span>&#123;<span class="comment">//整数解析完毕，跳出循环</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        s = flag*s;</div><div class="line">        <span class="keyword">if</span>(s&gt;Integer.MAX_VALUE)</div><div class="line">            <span class="keyword">return</span> Integer.MAX_VALUE;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s&lt;Integer.MIN_VALUE)</div><div class="line">            <span class="keyword">return</span> Integer.MIN_VALUE;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>)s;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<p>该方法参考的discuss上的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">double</span> result = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> POrN = <span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//用来去掉字符串开始时的空格</span></div><div class="line">        <span class="keyword">char</span>[] charArr = str.toCharArray();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:charArr)&#123;</div><div class="line">            count ++;</div><div class="line">            <span class="keyword">if</span>( c &gt;=<span class="string">'0'</span> &amp;&amp; c &lt;=<span class="string">'9'</span> )&#123;</div><div class="line">                result *= <span class="number">10</span>;</div><div class="line">                result += ( c - <span class="string">'0'</span>);</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>( c == <span class="string">'-'</span> &amp;&amp; count == <span class="number">1</span>)&#123;</div><div class="line">                POrN = -<span class="number">1</span>;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>( c == <span class="string">'+'</span> &amp;&amp; count == <span class="number">1</span>)&#123;</div><div class="line">                POrN =  <span class="number">1</span>;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>( c == <span class="string">' '</span> &amp;&amp; count == <span class="number">1</span>)&#123;</div><div class="line">                <span class="comment">//刚刚开始时count一定为1，若这时字符也恰好为空格，则count--，</span></div><div class="line">                <span class="comment">//下次判断又可以判断了</span></div><div class="line">                count --;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>( result &gt; Integer.MAX_VALUE )&#123;</div><div class="line">            <span class="keyword">if</span>(POrN == <span class="number">1</span>)</div><div class="line">                <span class="keyword">return</span> Integer.MAX_VALUE;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="keyword">return</span> Integer.MIN_VALUE;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>)(result * POrN);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problemset/algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode&lt;/a&gt;上的第8题&lt;/p&gt;
&lt;h1 id=&quot;题目8-String-to-Integer
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Container With Most Water(Leetcode 11)</title>
    <link href="http://wenjiewang.top/2016/09/11/Leetcode-11/"/>
    <id>http://wenjiewang.top/2016/09/11/Leetcode-11/</id>
    <published>2016-09-11T05:15:24.000Z</published>
    <updated>2016-10-07T14:41:58.961Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problemset/algorithms/" target="_blank" rel="external">Leetcoode</a>上的第11题</p>
<h1 id="题目8-String-to-Integer-atoi）"><a href="#题目8-String-to-Integer-atoi）" class="headerlink" title="题目8 String to Integer (atoi）"></a>题目8 String to Integer (atoi）</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Given n non-negative integers <code>a1, a2, ..., an</code>, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.<br><br>Note: You may not slant the container.</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>给定n个非负整数，这n个整数分别为<code>a1, a2, ..., an</code>,每个整数都对应一个坐标如<code>ai</code>对应坐标为(i,ai)，该坐标和点(i,0)形成的线段，从n条线段中找出两条使得形成的容器装水最多，容器不能倾斜。</p>
<p><strong>方法一</strong></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//超时。。。</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="keyword">int</span>[] height)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> len = height.length;</div><div class="line">        <span class="keyword">int</span> max_water = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">0</span>;j&lt;len;j++)&#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = j+<span class="number">1</span>;i&lt;len;i++)&#123;</div><div class="line">                <span class="comment">//取长度较小的边，类似木桶原理</span></div><div class="line">                <span class="keyword">int</span> h = height[i]&gt;height[j]?height[j]:height[i];</div><div class="line">                <span class="keyword">int</span> w = (i-j)*h;</div><div class="line">                <span class="keyword">if</span>(max_water&lt;w)&#123;</div><div class="line">                    max_water = w;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> max_water;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<p>该方法参考的discuss上的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">double</span> result = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> POrN = <span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//用来去掉字符串开始时的空格</span></div><div class="line">        <span class="keyword">char</span>[] charArr = str.toCharArray();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:charArr)&#123;</div><div class="line">            count ++;</div><div class="line">            <span class="keyword">if</span>( c &gt;=<span class="string">'0'</span> &amp;&amp; c &lt;=<span class="string">'9'</span> )&#123;</div><div class="line">                result *= <span class="number">10</span>;</div><div class="line">                result += ( c - <span class="string">'0'</span>);</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>( c == <span class="string">'-'</span> &amp;&amp; count == <span class="number">1</span>)&#123;</div><div class="line">                POrN = -<span class="number">1</span>;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>( c == <span class="string">'+'</span> &amp;&amp; count == <span class="number">1</span>)&#123;</div><div class="line">                POrN =  <span class="number">1</span>;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>( c == <span class="string">' '</span> &amp;&amp; count == <span class="number">1</span>)&#123;</div><div class="line">                <span class="comment">//刚刚开始时count一定为1，若这时字符也恰好为空格，则count--，</span></div><div class="line">                <span class="comment">//下次判断又可以判断了</span></div><div class="line">                count --;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>( result &gt; Integer.MAX_VALUE )&#123;</div><div class="line">            <span class="keyword">if</span>(POrN == <span class="number">1</span>)</div><div class="line">                <span class="keyword">return</span> Integer.MAX_VALUE;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="keyword">return</span> Integer.MIN_VALUE;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>)(result * POrN);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problemset/algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode&lt;/a&gt;上的第11题&lt;/p&gt;
&lt;h1 id=&quot;题目8-String-to-Intege
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-5-7</title>
    <link href="http://wenjiewang.top/2016/09/11/Leetcode-5-7/"/>
    <id>http://wenjiewang.top/2016/09/11/Leetcode-5-7/</id>
    <published>2016-09-11T05:15:24.000Z</published>
    <updated>2016-09-11T07:53:32.771Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problemset/algorithms/" target="_blank" rel="external">Leetcoode</a>上的第5题与第7题</p>
<h1 id="题目5-Longest-Palindromic-Substring"><a href="#题目5-Longest-Palindromic-Substring" class="headerlink" title="题目5 Longest Palindromic Substring"></a>题目5 Longest Palindromic Substring</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>给定一个字符串求最长的回文子字符串。方法一和二参考discuss</p>
<ul>
<li><strong>方法一</strong> 用两个指针从可能回文的字符串地方向两边进行判断。如一个奇数长度字符串两个指针从中间开始分别进行比较，而偶数时则是至少中间两个字符串相同（也可能是四个八个等等）。</li>
<li><strong>方法二</strong> 基于动态规划，dp(i,j)代表字符串s(i to j)是回文字符串，则dp(i,j)=true，否则dp(i,j)=false。</li>
</ul>
<ol>
<li>那么一般情况下dp[i][j]=dp[i+1][j=1]&amp;&amp;s[i]==s[j]</li>
<li>或者当j-i&lt;3时，dp[i][j]=(j-i&lt;3)&amp;&amp;s[i]==s[j]<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2></li>
</ol>
<p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(s==<span class="keyword">null</span>|s.isEmpty())<span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;<span class="comment">//保存最长的字符串数组下标</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;s.length();i++)&#123;</div><div class="line">            <span class="keyword">int</span> beg = i,end = i;</div><div class="line">            <span class="keyword">while</span>(end+<span class="number">1</span>&lt;s.length()&amp;&amp;s.charAt(beg)==s.charAt(end+<span class="number">1</span>))&#123;<span class="comment">//判断可能为回文字符串的中间</span></div><div class="line">                end++;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">while</span>(end+<span class="number">1</span>&lt;s.length()&amp;&amp;beg-<span class="number">1</span>&gt;=<span class="number">0</span>&amp;&amp;s.charAt(end+<span class="number">1</span>)==s.charAt(beg-<span class="number">1</span>))&#123;<span class="comment">//向中间向两边两边开始遍历</span></div><div class="line">                beg--;</div><div class="line">                end++;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(end - beg + <span class="number">1</span>&gt;max)&#123;<span class="comment">//判断该回文字符串是不是最大的字符串</span></div><div class="line">                a=beg;</div><div class="line">                b=end;</div><div class="line">                max = end - beg + <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> s.substring(a,b+<span class="number">1</span>);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">  <span class="keyword">int</span> n = s.length();</div><div class="line">  String res = <span class="keyword">null</span>;</div><div class="line">    </div><div class="line">  <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][n];</div><div class="line">    </div><div class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</div><div class="line">      dp[i][j] = s.charAt(i) == s.charAt(j) &amp;&amp; (j - i &lt; <span class="number">3</span> || dp[i + <span class="number">1</span>][j - <span class="number">1</span>]);<span class="comment">//求得dp的值</span></div><div class="line">            </div><div class="line">      <span class="keyword">if</span> (dp[i][j] &amp;&amp; (res == <span class="keyword">null</span> || j - i + <span class="number">1</span> &gt; res.length())) &#123;<span class="comment">//dp值为true则该字符串为回文字符串</span></div><div class="line">        res = s.substring(i, j + <span class="number">1</span>);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">    </div><div class="line">  <span class="keyword">return</span> res;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="题目7-Reverse-Integer"><a href="#题目7-Reverse-Integer" class="headerlink" title="题目7 Reverse Integer"></a>题目7 Reverse Integer</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p><a href="https://leetcode.com/problems/reverse-integer/" target="_blank" rel="external">题目链接</a></p>
<p>Reverse digits of an integer.</p>
<p><strong>Example1:</strong> <code>x = 123, return 321</code></p>
<p><strong>Example2:</strong> <code>x = 123, return 321</code></p>
<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>求一个正数(int)的反向数。要注意到<strong>反向之后可能会越界</strong>，java的int类型是32位(-2147483648到2147483648)，例如1010101019的反向数就会越界。其次是<strong>负数取余的值还是负数</strong>。</p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> y = x;</div><div class="line">    <span class="keyword">long</span> res = <span class="number">0</span>;<span class="comment">//这里用long来求反向数</span></div><div class="line">    <span class="keyword">while</span>(y!=<span class="number">0</span>)&#123;</div><div class="line">        res = res*<span class="number">10</span> + y%<span class="number">10</span>;<span class="comment">//负数对正数取余负号保留</span></div><div class="line">        y/=<span class="number">10</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(res&gt;Integer.MAX_VALUE||res&lt;Integer.MIN_VALUE)&#123;<span class="comment">//判断是否越界，越界则反向数为0</span></div><div class="line">        res = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>) res;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problemset/algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode&lt;/a&gt;上的第5题与第7题&lt;/p&gt;
&lt;h1 id=&quot;题目5-Longest-Palin
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-392-394(共四道)</title>
    <link href="http://wenjiewang.top/2016/09/07/Leetcode-392-394/"/>
    <id>http://wenjiewang.top/2016/09/07/Leetcode-392-394/</id>
    <published>2016-09-06T17:17:21.000Z</published>
    <updated>2016-09-13T11:15:34.166Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problemset/algorithms/" target="_blank" rel="external">Leetcoode</a>上的第392题到第394题</p>
<h1 id="题目392-Is-Subsequence"><a href="#题目392-Is-Subsequence" class="headerlink" title="题目392 Is Subsequence"></a>题目392 Is Subsequence</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Given a string s and a string t, check if s is subsequence of t.</p>
<p>You may assume that there is only lower case English letters in both s and t. t is potentially a very long (length ~= 500,000) string, and s is a short string (&lt;=100).</p>
<p>A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, “ace” is a subsequence of <code>&quot;abcde&quot;</code> while <code>&quot;aec&quot;</code> is not).</p>
<p><strong>Example1:</strong></p>
<p>s = <code>&quot;abc&quot;</code>, t = <code>&quot;ahbgdc&quot;</code></p>
<p>Return <code>true</code>.</p>
<p><strong>Example2</strong></p>
<p>s=<code>&quot;axc&quot;</code>,t=<code>&quot;ahbgdc&quot;</code></p>
<p>Return <code>false</code>.</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>题目大意：给定两个字符串s，t，检查s是否是t的子串。其中s和t都只包含小写字符，t是非常大的字符串（长度大约有50万长），s是一个比较短的字符串长度小于等于100。子串是指该字符串由原来的字符串删除一些字符但不改变字符的相对位置。</p>
<ul>
<li><strong>方法一</strong> 两个for循环遍历一遍。（刚刚开始，我在想int是不是不能50万，后来想到java中int为32位，肯定可以达到50w；</li>
<li><strong>方法二</strong> 参考了discuss上的，只需要一个for循环。</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubsequence</span><span class="params">(String s, String t)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> ls=s.length();</div><div class="line">        <span class="keyword">int</span> lt=t.length();</div><div class="line">        <span class="keyword">if</span>(ls==<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//空串肯定为t的子串</span></div><div class="line">        <span class="keyword">int</span> i,m=<span class="number">0</span>;<span class="comment">//m标识该从t中哪开始遍历</span></div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;ls;i++)&#123;</div><div class="line">            <span class="keyword">char</span> a = s.charAt(i);</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&lt;lt;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(a==t.charAt(j))&#123;</div><div class="line">                    m = j+<span class="number">1</span>;<span class="comment">//下次遍历从j+1开始</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                m = j + <span class="number">1</span>;<span class="comment">//记录当前遍历到哪了</span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(m&gt;=lt&amp;&amp;i&lt;ls-<span class="number">1</span>)<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubsequence</span><span class="params">(String s, String t)</span> </span></div><div class="line">   &#123;</div><div class="line">       <span class="keyword">if</span>(t.length() &lt; s.length()) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">       <span class="keyword">int</span> prev = <span class="number">0</span>;<span class="comment">//相当于方法一中的m</span></div><div class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length();i++)</div><div class="line">       &#123;</div><div class="line">           <span class="keyword">char</span> tempChar = s.charAt(i);</div><div class="line">           prev = t.indexOf(tempChar,prev);<span class="comment">//在t中查找tempChar字符，运用indexOf方法，相当于方法一中第二个for循环</span></div><div class="line">           <span class="keyword">if</span>(prev == -<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">           prev++;</div><div class="line">       &#125;</div><div class="line">       </div><div class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h1 id="题目393-UTF-8-Validation"><a href="#题目393-UTF-8-Validation" class="headerlink" title="题目393 UTF-8 Validation"></a>题目393 UTF-8 Validation</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p><a href="https://leetcode.com/contest/2/problems/perfect-rectangle/" target="_blank" rel="external">题目链接</a></p>
<p>A character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:</p>
<ol>
<li>For 1-byte character, the first bit is a 0, followed by its unicode code.</li>
<li>For n-bytes character, the first n-bits are all one’s, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.<br>This is how the UTF-8 encoding would work:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Char. number range  |        UTF-8 octet sequence</div><div class="line">     (hexadecimal)    |              (binary)</div><div class="line">  --------------------+---------------------------------------------</div><div class="line">  0000 0000-0000 007F | 0xxxxxxx</div><div class="line">  0000 0080-0000 07FF | 110xxxxx 10xxxxxx</div><div class="line">  0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx</div><div class="line">  0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</div></pre></td></tr></table></figure>
<p>Given an array of integers representing the data, return whether it is a valid utf-8 encoding.</p>
<p><strong>Note:</strong><br>The input is an array of integers. Only <strong>the least significant 8 bits</strong> of each integer is used to store the data. This means each integer represents only 1 byte of data.</p>
<p><strong>Example1:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data = [197, 130, 1], which represents the octet sequence: 11000101 10000010 00000001.</div><div class="line"></div><div class="line">Return true.</div><div class="line">It is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.</div></pre></td></tr></table></figure>
<p><strong>Example2:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data = [235, 140, 4], which represented the octet sequence: 11101011 10001100 00000100.</div><div class="line"></div><div class="line">Return false.</div><div class="line">The first 3 bits are all one&apos;s and the 4th bit is 0 means it is a 3-bytes character.</div><div class="line">The next byte is a continuation byte which starts with 10 and that&apos;s correct.</div><div class="line">But the second continuation byte does not start with 10, so it is invalid.</div></pre></td></tr></table></figure>
<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>题目大意：一个UTF-8编码的字符长度可能为1byte到4byte长，主要取决于以下规则：</p>
<ol>
<li>对于1byte字符，他的第一位是0，紧接着的是其的Unicode编码</li>
<li>对于n-bytes字符，前n-bits全是1，而n+1位为0，紧跟着的是n-1个字节其前两位为10开始的</li>
</ol>
<p>给定一个int数组，数组中每个整数都至少是8位来存储数据，这意味着一个整数仅仅代表一个字节的数据</p>
<ul>
<li><strong>方法一</strong> 首先获取第一个整数判断其前几位是1，然后再判断后面几个是否为10（二进制）开始的。参考discuss的</li>
</ul>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLen</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> mask = <span class="number">0x80</span>;<span class="comment">//mask 二进制为10000000</span></div><div class="line">    <span class="keyword">if</span>((s&amp;mask)==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//进行与操作，判断第一位是否为0</span></div><div class="line">    mask&gt;&gt;=<span class="number">1</span>;<span class="comment">//mask 现在为 1000000 ，进行右移操作</span></div><div class="line">    <span class="keyword">if</span>((s&amp;mask)==<span class="number">0</span>)<span class="keyword">return</span> -<span class="number">1</span>;<span class="comment">//第二位为0的话肯定不是utf-8</span></div><div class="line">    <span class="keyword">int</span> len = <span class="number">1</span>;</div><div class="line">    mask&gt;&gt;=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>((mask!=<span class="number">0</span>)&amp;&amp;(s&amp;mask)==mask)&#123;<span class="comment">//判断前几位1的个数</span></div><div class="line">        mask&gt;&gt;=<span class="number">1</span>;</div><div class="line">        len++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> len==<span class="number">7</span>?-<span class="number">1</span>:len;<span class="comment">//排除11111111，</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validUtf8</span><span class="params">(<span class="keyword">int</span>[] data)</span> </span>&#123;</div><div class="line">   <span class="keyword">if</span>(data.length==<span class="number">0</span>&amp;&amp;data ==<span class="keyword">null</span>)<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">int</span>  i =<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(i&lt;data.length)&#123;</div><div class="line">        <span class="keyword">int</span> s = getLen(data[i]);</div><div class="line">        <span class="keyword">if</span>(s&lt;<span class="number">0</span>||(i+s)&gt;=data.length)<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">while</span> (s&gt;<span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">if</span>(data[++i]&gt;&gt;<span class="number">6</span>!=<span class="number">2</span>)<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            s--;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(s&gt;<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        i++;<span class="comment">//如果数组中还有数要继续判断其是否为utf-8</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="题目394-Decode-String"><a href="#题目394-Decode-String" class="headerlink" title="题目394 Decode String"></a>题目394 Decode String</h1><h2 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h2><p>Given an encoded string, return it’s decoded string.</p>
<p>The encoding rule is: <code>k[encoded_string]</code>, where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer.</p>
<p>You may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.</p>
<p>Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there won’t be input like <code>3a or 2[4]</code>.<br><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">s = &quot;3[a]2[bc]&quot;, return &quot;aaabcbc&quot;.</div><div class="line">s = &quot;3[a2[c]]&quot;, return &quot;accaccacc&quot;.//注意可以嵌套的，我当时做的时候没注意嵌套，然后做错了</div><div class="line">s = &quot;2[abc]3[cd]ef&quot;, return &quot;abcabccdcdcdef&quot;.</div></pre></td></tr></table></figure>
<h2 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h2><p>题目大意：将字符串解码，返回解码后的字符串。</p>
<ul>
<li><strong>方法一</strong> 用栈来存储待解码字符串，每当遇到<code>]</code>进行一次解码，然后重新将其压入栈中，直到遍历完整个编码字符串。</li>
<li><strong>方法二</strong> 用递归来解决。参考的discuss。</li>
</ul>
<h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">decodeString</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">       Stack&lt;Character&gt; str = <span class="keyword">new</span> Stack&lt;&gt;();<span class="comment">//栈用来存放字符</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s.toCharArray())&#123;</div><div class="line">            <span class="keyword">if</span>(c==<span class="string">']'</span>)&#123;<span class="comment">//当前c为]则要做出一次解码</span></div><div class="line">                String repeat = <span class="string">""</span>;</div><div class="line">                <span class="keyword">while</span>(str.peek()!=<span class="string">'['</span>)&#123;</div><div class="line">                    repeat=str.peek()+repeat;<span class="comment">//注意这里一定是str.peek()+repeat，不能写反,也不能用+=</span></div><div class="line">                    str.pop();</div><div class="line">                &#125;</div><div class="line">                str.pop();</div><div class="line">                String num = <span class="string">""</span>;<span class="comment">//重复的数量，由于重复的值可能是多位数</span></div><div class="line">                <span class="keyword">while</span>(!str.isEmpty())&#123;</div><div class="line">                    <span class="keyword">char</span> n = str.peek();</div><div class="line">                    <span class="keyword">if</span>(!Character.isDigit(n))<span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">else</span> &#123;</div><div class="line">                        num=n+num;<span class="comment">//注意这里一定是n+num，不能写反，也不能用+=</span></div><div class="line">                        str.pop();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">int</span> re;</div><div class="line">                <span class="keyword">if</span>(num==<span class="string">""</span>)re=<span class="number">1</span>;</div><div class="line">                <span class="keyword">else</span>&#123;</div><div class="line">                    re = Integer.parseInt(num);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">while</span>(re--&gt;<span class="number">0</span>)&#123;</div><div class="line">                    <span class="keyword">for</span>(<span class="keyword">char</span> ch:repeat.toCharArray())</div><div class="line">                        str.push(ch);</div><div class="line">                &#125;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                str.push(c);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String aimS=<span class="string">""</span>;</div><div class="line">        <span class="keyword">while</span>(!str.isEmpty())&#123;</div><div class="line">            aimS=str.pop()+aimS;<span class="comment">//注意这里一定是str.pop()+aimS，不能写反，也不能用+=</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> aimS;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> idx;</div><div class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">decodeString3</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">        idx = <span class="number">0</span>;</div><div class="line">        <span class="keyword">return</span> helper(s);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">helper</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">        StringBuffer ans = <span class="keyword">new</span> StringBuffer();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;idx &lt; s.length();++idx)&#123;</div><div class="line">            <span class="keyword">char</span> ch = s.charAt(idx);</div><div class="line">            <span class="keyword">if</span>(ch == <span class="string">'['</span>)&#123;</div><div class="line">                idx++;</div><div class="line">                String str = helper(s);</div><div class="line">                <span class="keyword">while</span> (k &gt; <span class="number">0</span>) &#123;</div><div class="line">                    ans.append(str);</div><div class="line">                    --k;</div><div class="line">                &#125;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">']'</span>) &#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isDigit(ch)) &#123;</div><div class="line">                k = k * <span class="number">10</span> + ch - <span class="string">'0'</span>;</div><div class="line">            &#125; <span class="keyword">else</span> ans.append(ch);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ans.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problemset/algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode&lt;/a&gt;上的第392题到第394题&lt;/p&gt;
&lt;h1 id=&quot;题目392-Is-Subs
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-6-391</title>
    <link href="http://wenjiewang.top/2016/09/04/Leetcode-391-6/"/>
    <id>http://wenjiewang.top/2016/09/04/Leetcode-391-6/</id>
    <published>2016-09-03T16:12:01.000Z</published>
    <updated>2016-09-07T16:53:05.687Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problemset/algorithms/" target="_blank" rel="external">Leetcoode</a>上的第6题与第391题</p>
<h1 id="题目6-ZigZag-Conversion"><a href="#题目6-ZigZag-Conversion" class="headerlink" title="题目6 ZigZag Conversion"></a>题目6 ZigZag Conversion</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">P   A   H   N</div><div class="line">A P L S I I G</div><div class="line">Y   I   R</div></pre></td></tr></table></figure>
<p>And then read line by line: “PAHNAPLSIIGYIR”<br>Write the code that will take a string and make this conversion given a number of rows:<br><code>string convert(string text, int nRows);</code><br>convert(“PAYPALISHIRING”, 3) should return “PAHNAPLSIIGYIR”.</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>其实刚刚看到这个题目时，看了很久都不知道题目意思，然后去wiki了<a href="https://en.wikipedia.org/wiki/Zigzag" target="_blank" rel="external">Zigzag</a>的意思，指锯齿状，而且锯齿的角度是平行的且每隔一条线之间的两条行平行。简而言之就是多个<code>W</code>连接起来。<br>例如：<br><img src="img/leetcode6.png" alt=""></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">String s=<span class="string">"123456789"</span>;</div><div class="line">convert(s,<span class="number">3</span>);</div><div class="line"><span class="comment">//输出的字符串应该为159246837</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>方法一</strong> 用一个字符串数组来保存要输出每行的字符串，最后将字符串数组依次输出。</li>
<li><strong>方法二</strong> 寻找每行之间的规律，可以发现第一行和最后一行字符之间数组下标值相差（numRows-1）*2，而其他行除了下标相差（numRows-1)*2之外还有一个数，即该数是前一个数加上（numRows-1-i）*2，这里i为行数（从0开始）。</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">略</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">convert</span><span class="params">(String s, <span class="keyword">int</span> numRows)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> len = s.length();</div><div class="line">        <span class="keyword">if</span>(numRows&lt;=<span class="number">1</span>||len==<span class="number">0</span>)<span class="keyword">return</span> s;<span class="comment">//只有一行，或者字符串为空时直接返回s</span></div><div class="line">        String res = <span class="string">""</span>;<span class="comment">//要输出的字符串</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;numRows;i++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i;j&lt;len;j+=(numRows-<span class="number">1</span>)*<span class="number">2</span>)&#123;</div><div class="line">                res = res + s.charAt(j);</div><div class="line">                <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;i&lt;len-<span class="number">1</span>)&#123;<span class="comment">//除了第一行和最后一行</span></div><div class="line">                    <span class="keyword">int</span> k = j + (numRows - i - <span class="number">1</span>)*<span class="number">2</span>;<span class="comment">//之间的数的下标</span></div><div class="line">                    <span class="keyword">if</span>(k&lt;len)&#123;<span class="comment">//小于字符串长度</span></div><div class="line">                        res += s.charAt(k);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> res;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h1 id="题目391-Perfect-Rectangle"><a href="#题目391-Perfect-Rectangle" class="headerlink" title="题目391 Perfect Rectangle"></a>题目391 Perfect Rectangle</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p><a href="https://leetcode.com/contest/2/problems/perfect-rectangle/" target="_blank" rel="external">题目链接</a></p>
<p>Given N axis-aligned rectangles where N &gt; 0, determine if they all together form an exact cover of a rectangular region.</p>
<p>Each rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).</p>
<p><strong>Example1:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">rectangles = [</div><div class="line">  [1,1,3,3],</div><div class="line">  [3,1,4,2],</div><div class="line">  [3,2,4,4],</div><div class="line">  [1,3,2,4],</div><div class="line">  [2,3,3,4]</div><div class="line">]</div><div class="line"></div><div class="line">Return true. All 5 rectangles together form an exact cover of a rectangular region.</div></pre></td></tr></table></figure>
<p><strong>Example2:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rectangles = [</div><div class="line">  [1,1,2,3],</div><div class="line">  [1,3,2,4],</div><div class="line">  [3,1,4,2],</div><div class="line">  [3,2,4,4]</div><div class="line">]</div><div class="line"></div><div class="line">Return false. Because there is a gap between the two rectangular regions.</div></pre></td></tr></table></figure>
<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>n个轴对称矩形(其中n&gt;0)，判断是否能围成一个矩形,不能有重叠且恰好围成一个矩形区域。每个矩形用左下顶点和右上顶点来表示，如矩形[1,1,2,3]，表示该矩形左下顶点坐标为（1,1），右下顶点坐标为（2,3）。</p>
<ul>
<li><strong>方法一</strong>  顶点检查法，<a href="https://discuss.leetcode.com/topic/55923/o-n-solution-by-counting-corners-with-detailed-explaination/2" target="_blank" rel="external">参考地址</a></li>
<li><strong>方法二</strong>  扫描线法，<a href="https://discuss.leetcode.com/topic/55944/o-n-log-n-sweep-line-solution" target="_blank" rel="external">参考地址</a><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2></li>
</ul>
<p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lastRemaining2</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span> [n];</div><div class="line">    <span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span> [n];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;n;i++)</div><div class="line">        a[i]=i+<span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> k = n;</div><div class="line">    <span class="keyword">while</span>(k&gt;<span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">int</span> i =<span class="number">0</span>,j=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(i&lt;k-<span class="number">1</span>)&#123;<span class="comment">//正向删除</span></div><div class="line">            b[j++]=a[i+<span class="number">1</span>];<span class="comment">//复制</span></div><div class="line">            i+=<span class="number">2</span>;</div><div class="line">        &#125;</div><div class="line">        k=k/<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span>(k!=<span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">for</span>(j=k-<span class="number">1</span>,i=<span class="number">0</span>;j&gt;=<span class="number">0</span>;j-=<span class="number">2</span>)&#123;<span class="comment">//逆向删除</span></div><div class="line">            b[j]=<span class="number">0</span>;<span class="comment">//直接将其改为0</span></div><div class="line">        &#125;&#125;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;k;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(b[i]!=<span class="number">0</span>)&#123;</div><div class="line">                a[j++]=b[i];<span class="comment">//复制</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        k=k/<span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> a[<span class="number">0</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//定义一个扫描事件</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Event</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Event</span>&gt; </span>&#123;</div><div class="line">	<span class="keyword">int</span> time;</div><div class="line">	<span class="keyword">int</span>[] rect;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Event</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span>[] rect)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.time = time;</div><div class="line">		<span class="keyword">this</span>.rect = rect;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Event that)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>.time != that.time) <span class="keyword">return</span> <span class="keyword">this</span>.time - that.time;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">this</span>.rect[<span class="number">0</span>] - that.rect[<span class="number">0</span>];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRectangleCover</span><span class="params">(<span class="keyword">int</span>[][] rectangles)</span> </span>&#123;</div><div class="line">	PriorityQueue&lt;Event&gt; pq = <span class="keyword">new</span> PriorityQueue&lt;Event&gt; ();</div><div class="line">        <span class="comment">// border of y-intervals</span></div><div class="line">	<span class="keyword">int</span>[] border= &#123;Integer.MAX_VALUE, Integer.MIN_VALUE&#125;;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span>[] rect : rectangles) &#123;</div><div class="line">		Event e1 = <span class="keyword">new</span> Event(rect[<span class="number">0</span>], rect);</div><div class="line">		Event e2 = <span class="keyword">new</span> Event(rect[<span class="number">2</span>], rect);</div><div class="line">		pq.add(e1);</div><div class="line">		pq.add(e2);</div><div class="line">		<span class="keyword">if</span> (rect[<span class="number">1</span>] &lt; border[<span class="number">0</span>]) border[<span class="number">0</span>] = rect[<span class="number">1</span>];</div><div class="line">		<span class="keyword">if</span> (rect[<span class="number">3</span>] &gt; border[<span class="number">1</span>]) border[<span class="number">1</span>] = rect[<span class="number">3</span>];</div><div class="line">	&#125;</div><div class="line">	TreeSet&lt;<span class="keyword">int</span>[]&gt; set = <span class="keyword">new</span> TreeSet&lt;<span class="keyword">int</span>[]&gt; (<span class="keyword">new</span> Comparator&lt;<span class="keyword">int</span>[]&gt; () &#123;</div><div class="line">		<span class="meta">@Override</span></div><div class="line">                <span class="comment">// if two y-intervals intersects, return 0</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span> <span class="params">(<span class="keyword">int</span>[] rect1, <span class="keyword">int</span>[] rect2)</span> </span>&#123;</div><div class="line">			<span class="keyword">if</span> (rect1[<span class="number">3</span>] &lt;= rect2[<span class="number">1</span>]) <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (rect2[<span class="number">3</span>] &lt;= rect1[<span class="number">1</span>]) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">	<span class="keyword">int</span> yRange = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span> (!pq.isEmpty()) &#123;</div><div class="line">		<span class="keyword">int</span> time = pq.peek().time;</div><div class="line">		<span class="keyword">while</span> (!pq.isEmpty() &amp;&amp; pq.peek().time == time) &#123;</div><div class="line">			Event e = pq.poll();</div><div class="line">			<span class="keyword">int</span>[] rect = e.rect;</div><div class="line">			<span class="keyword">if</span> (time == rect[<span class="number">2</span>]) &#123;</div><div class="line">				set.remove(rect);</div><div class="line">				yRange -= rect[<span class="number">3</span>] - rect[<span class="number">1</span>];</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				<span class="keyword">if</span> (!set.add(rect)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">				yRange += rect[<span class="number">3</span>] - rect[<span class="number">1</span>];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">                <span class="comment">// check intervals' range</span></div><div class="line">		<span class="keyword">if</span> (!pq.isEmpty() &amp;&amp; yRange != border[<span class="number">1</span>] - border[<span class="number">0</span>]) &#123;</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">			<span class="comment">//if (set.isEmpty()) return false;</span></div><div class="line">			<span class="comment">//if (yRange != border[1] - border[0]) return false;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problemset/algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode&lt;/a&gt;上的第6题与第391题&lt;/p&gt;
&lt;h1 id=&quot;题目6-ZigZag-Conv
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-389-390</title>
    <link href="http://wenjiewang.top/2016/08/30/Leetcode-389-390/"/>
    <id>http://wenjiewang.top/2016/08/30/Leetcode-389-390/</id>
    <published>2016-08-30T01:10:01.000Z</published>
    <updated>2016-08-30T02:00:44.179Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/contest/detail/2" target="_blank" rel="external">Leetcoode  Weekly Contest 2</a>总共有三道题</p>
<h1 id="题目389-Find-the-Difference"><a href="#题目389-Find-the-Difference" class="headerlink" title="题目389 Find the Difference"></a>题目389 Find the Difference</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Given two strings s and t which consist of only lowercase letters.</p>
<p>String t is generated by random shuffling string s and then add one more letter at a random position.</p>
<p>Find the letter that was added in t.</p>
<p>Example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Input:</div><div class="line">s = &quot;abcd&quot;</div><div class="line">t = &quot;abcde&quot;</div><div class="line"></div><div class="line">Output:</div><div class="line">e</div><div class="line"></div><div class="line">Explanation:</div><div class="line">&apos;e&apos; is the letter that was added.</div></pre></td></tr></table></figure>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>给定两个字符串s,t只包括小写字母，t是字符串s的字符重排而且在随机的位置上还多了一个字母，要求找到该字母。</p>
<ul>
<li><strong>方法一</strong>  第一反应就是用两个for循环，外层为s字符串，内层在t中寻找，找到的话将其替换成字符A（原字符串全是小写字母，所以不存在大写字符。然后再遍历一遍t，如果不为A字符则该字符为所求字符。</li>
<li><strong>方法二</strong> hash表原理，统计两个字符串中每个字符个数，然后找出两个字符串哈希表的不同，返回那个不同的字符即可。</li>
<li><strong>方法三</strong> （<em>这是我在写这个文章的时候想出来的</em>）将两个字符串中所有字符转换为整数相加，最后将总数相减即为所求字符（在Leetcode上能通过，好开心），这应该是最简单的方法吧。 <h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2></li>
</ul>
<p>方法一</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">略</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">findTheDifference</span><span class="params">(String s, String t)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] hash1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];<span class="comment">//哈希表</span></div><div class="line">        <span class="keyword">int</span>[] hash2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;s.length();i++)&#123;</div><div class="line">            hash1[s.charAt(i)]++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;t.length();i++)&#123;</div><div class="line">            hash2[t.charAt(i)]++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">256</span>;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(hash1[i]!=hash2[i])&#123;</div><div class="line">                <span class="keyword">return</span> (<span class="keyword">char</span>) i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="string">'\0'</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>方法三</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">findTheDifference</span><span class="params">(String s, String t)</span> </span>&#123;</div><div class="line">    <span class="keyword">long</span> s1=<span class="number">0</span>,t1=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;s.length();i++)</div><div class="line">            s1+=(<span class="keyword">int</span>)s.charAt(i);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t.length();i++)</div><div class="line">            t1+=(<span class="keyword">int</span>)t.charAt(i);</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">char</span>) (t1-s1);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="题目390-Elimination-Game"><a href="#题目390-Elimination-Game" class="headerlink" title="题目390 Elimination Game"></a>题目390 Elimination Game</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p>There is a list of sorted integers from 1 to n. Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.</p>
<p>Repeat the previous step again, but this time from right to left, remove the right most number and every other number from the remaining numbers.</p>
<p>We keep repeating the steps again, alternating left to right and right to left, until a single number remains.</p>
<p>Find the last number that remains starting with a list of length n.</p>
<p><strong>Example</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Input:</div><div class="line">n = 9,</div><div class="line">1 2 3 4 5 6 7 8 9</div><div class="line">2 4 6 8</div><div class="line">2 6</div><div class="line">6</div><div class="line"></div><div class="line">Output:</div><div class="line">6</div></pre></td></tr></table></figure>
<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>题目大意是指给定一个已排序的整数从1到n，首先从左到右，移除第一个数，而后每隔一个数字移除一个，直到表的最后位置，重复之前的步骤，不过这回是从右往左开始，移除最右边的数，然后每隔一个数移除一个，直到最左边。<br>重复上述操作，直至表中只有一个元素。</p>
<ul>
<li><strong>方法一</strong>  用数组，两个数组，一个用来保存未被删除的。但是该方法容易内存超过限制，不能通过leetcode。</li>
<li><strong>方法二</strong> 根据题设要求的数字移除过程，可以发现每执行完一趟数字移除操作，列表中剩余相邻数字之间的差都会加倍。（参考别人的）</li>
</ul>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>方法一</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lastRemaining2</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span> [n];</div><div class="line">    <span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span> [n];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;n;i++)</div><div class="line">        a[i]=i+<span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> k = n;</div><div class="line">    <span class="keyword">while</span>(k&gt;<span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">int</span> i =<span class="number">0</span>,j=<span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(i&lt;k-<span class="number">1</span>)&#123;<span class="comment">//正向删除</span></div><div class="line">            b[j++]=a[i+<span class="number">1</span>];<span class="comment">//复制</span></div><div class="line">            i+=<span class="number">2</span>;</div><div class="line">        &#125;</div><div class="line">        k=k/<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span>(k!=<span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">for</span>(j=k-<span class="number">1</span>,i=<span class="number">0</span>;j&gt;=<span class="number">0</span>;j-=<span class="number">2</span>)&#123;<span class="comment">//逆向删除</span></div><div class="line">            b[j]=<span class="number">0</span>;<span class="comment">//直接将其改为0</span></div><div class="line">        &#125;&#125;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;k;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(b[i]!=<span class="number">0</span>)&#123;</div><div class="line">                a[j++]=b[i];<span class="comment">//复制</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        k=k/<span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> a[<span class="number">0</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法二</p>
<p>参考了<a href="http://bookshadow.com/weblog/2016/08/28/leetcode-elimination-game/" target="_blank" rel="external">书影</a></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lastRemaining3</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> a=<span class="number">1</span>,p=<span class="number">1</span>,cnt=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (n&gt;<span class="number">1</span>)&#123;</div><div class="line">        n/=<span class="number">2</span>;</div><div class="line">        cnt++;<span class="comment">//执行的cnt趟</span></div><div class="line">        p*=<span class="number">2</span>;<span class="comment">//数字间的间隔</span></div><div class="line">        <span class="keyword">if</span>(cnt%<span class="number">2</span>==<span class="number">1</span>)&#123;</div><div class="line">            a += p/<span class="number">2</span> + p*(n-<span class="number">1</span>);</div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">            a -= p/<span class="number">2</span> + p*(n-<span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/contest/detail/2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcoode  Weekly Contest 2&lt;/a&gt;总共有三道题&lt;/p&gt;
&lt;h1 id=&quot;题目389-Fi
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-4</title>
    <link href="http://wenjiewang.top/2016/08/28/leetcode-4/"/>
    <id>http://wenjiewang.top/2016/08/28/leetcode-4/</id>
    <published>2016-08-28T15:00:32.000Z</published>
    <updated>2016-08-30T02:04:22.427Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="external">Leetcode</a>上算法题四，求两个已排序数组的中位数。</p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p>
<p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p>
<p><strong>Example 1:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">nums1 = [1, 3]</div><div class="line">nums2 = [2]</div><div class="line"></div><div class="line">The median is 2.0</div></pre></td></tr></table></figure></p>
<p><strong>Example 2:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">nums1 = [1, 2]</div><div class="line">nums2 = [3, 4]</div><div class="line"></div><div class="line">The median is (2 + 3)/2 = 2.5</div></pre></td></tr></table></figure></p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ul>
<li><strong>方法一</strong>  将两个数组合并为一个有序数组a，根据两个数组长度的总长度n分类讨论：<ul>
<li>偶数则取数组a下标为n/2-1和n/2的取均值为所求的中位数，<strong>注意：数组为整数，应该除以2.0，转换为浮点数。</strong></li>
<li>奇数则取数组a下标为(n+1)/2-1的值为所求的中位数。</li>
</ul>
</li>
<li><strong>方法二</strong> 分开求(未完成)</li>
</ul>
<h2 id="算法效率"><a href="#算法效率" class="headerlink" title="算法效率"></a>算法效率</h2><p>方法一的空间复杂度为O(m+n),时间复杂度就是遍历一遍A,B数组为O(m+n);<br><br>方法二</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">findMedianSortedArrays2</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> len = nums1.length + nums2.length;</div><div class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[len];</div><div class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>,k = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> (i&lt;nums1.length&amp;&amp;j&lt;nums2.length)&#123;</div><div class="line">            <span class="keyword">if</span>(nums1[i]&lt;nums2[j])&#123;</div><div class="line">                a[k++]=nums1[i++];</div><div class="line">            &#125;<span class="keyword">else</span> &#123;</div><div class="line">                a[k++]=nums2[j++];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//下面的while 只会执行一个</span></div><div class="line">        <span class="keyword">while</span> (i&lt;nums1.length) a[k++]=nums1[i++];</div><div class="line">        <span class="keyword">while</span> (j&lt;nums2.length) a[k++]=nums2[j++];</div><div class="line">        <span class="keyword">if</span>(len%<span class="number">2</span>==<span class="number">0</span>)</div><div class="line">            <span class="keyword">return</span> (a[len/<span class="number">2</span>-<span class="number">1</span>]+a[len/<span class="number">2</span>])/<span class="number">2.0</span>;<span class="comment">//注意：数组为整数，应该除以2.0</span></div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="keyword">return</span> a[(len+<span class="number">1</span>)/<span class="number">2</span>-<span class="number">1</span>];</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> len = nums1.length + nums2.length;</div><div class="line">        <span class="keyword">int</span> count = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;<span class="comment">//flag 为1时表示数组1进行了++操作，为2表示数组2进行了++操作</span></div><div class="line">        <span class="keyword">if</span> (len % <span class="number">2</span> == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">int</span> m, n;</div><div class="line">            <span class="keyword">while</span> (i &lt; nums1.length &amp;&amp; i &lt; nums2.length) &#123;</div><div class="line">                <span class="keyword">if</span> (count == len / <span class="number">2</span>) &#123;</div><div class="line">                    <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;<span class="comment">//数组1中有一个中位数其序号为i,另一个中位数序号可能为i+1,j,j+1中的一个</span></div><div class="line">                        <span class="keyword">if</span> (nums1[i] &lt;= nums2[j]) &#123;<span class="comment">//另一个中位数为j</span></div><div class="line">                            <span class="keyword">return</span> (nums1[i] + nums2[j]) / <span class="number">2.0</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums1[i + <span class="number">1</span>] &gt; nums2[j + <span class="number">1</span>])</div><div class="line"></div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> (nums1[i] + nums2[j]) / <span class="number">2</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/median-of-two-sorted-arrays/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode&lt;/a&gt;上算法题四，求两个已排序数组的中位数。&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="算法分析" scheme="http://wenjiewang.top/categories/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
    
      <category term="algorithm" scheme="http://wenjiewang.top/tags/algorithm/"/>
    
      <category term="Leetcode" scheme="http://wenjiewang.top/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>hadooptest</title>
    <link href="http://wenjiewang.top/2016/08/25/hadooptest/"/>
    <id>http://wenjiewang.top/2016/08/25/hadooptest/</id>
    <published>2016-08-24T16:58:55.000Z</published>
    <updated>2016-08-25T09:14:20.565Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="研究生涯" scheme="http://wenjiewang.top/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E6%B6%AF/"/>
    
    
      <category term="hadoop" scheme="http://wenjiewang.top/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>git learning day 2</title>
    <link href="http://wenjiewang.top/2016/08/24/gitlearn2/"/>
    <id>http://wenjiewang.top/2016/08/24/gitlearn2/</id>
    <published>2016-08-24T03:07:57.000Z</published>
    <updated>2016-08-25T09:14:20.565Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git基础"><a href="#Git基础" class="headerlink" title="Git基础"></a>Git基础</h2><h3 id="撤销操作-昨天没看懂的地方，没细心看。。。"><a href="#撤销操作-昨天没看懂的地方，没细心看。。。" class="headerlink" title="撤销操作(昨天没看懂的地方，没细心看。。。)"></a>撤销操作(昨天没看懂的地方，没细心看。。。)</h3><p>一次提交过程，漏了几个文件未提交，此时可以运行带有<code>--amend</code>选修的提交命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#某一次commit</span></div><div class="line">$ git commit -m <span class="string">'initial commit'</span></div><div class="line"><span class="comment">#补上之前未git add 的文件</span></div><div class="line">$ git add forgotten_file</div><div class="line"><span class="comment">#直接进行下面操作，则将这些文件提交到该次commit,不需要-m</span></div><div class="line">$ git commit --amend</div></pre></td></tr></table></figure>
<p><em>最终只会有一个提交结果，第二次提交将代替第一次提交</em></p>
<h4 id="取消暂存的文件"><a href="#取消暂存的文件" class="headerlink" title="取消暂存的文件"></a>取消暂存的文件</h4><p>某一次执行<code>git add</code>时不小心多添加几个文件到暂存区去，如何取消这几个文件？</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#下面假设add了所有文件到暂存区</span></div><div class="line">$ git add *</div><div class="line"><span class="comment">#查看文件状态</span></div><div class="line">$ git status</div><div class="line"><span class="comment">#假设要取消README文件,使用git reset</span></div><div class="line">$ git reset HEAD README</div><div class="line"><span class="comment">#其中HEAD是当前分支引用的指针，它指向该分支上的最后一次提交，这表示HEAD</span></div><div class="line"><span class="comment">#将是下一次提交的父节点。即可以将其看作你的上一次提交的快照</span></div></pre></td></tr></table></figure>
<h4 id="撤销对文件的修改"><a href="#撤销对文件的修改" class="headerlink" title="撤销对文件的修改"></a>撤销对文件的修改</h4><p>想对一个已修改文件，将其还原成上次提交的样子，<code>git status</code>会提示你如何做,即使用<code>git checkout -- &lt;file&gt; ...</code>,</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim README</div><div class="line">$ git status</div><div class="line">$ git checkout -- README</div><div class="line">$ git status</div></pre></td></tr></table></figure>
<p><em>你需要知道</em><code>git checkout -- [file]</code><em>是一个危险的命令</em>，这很重要。 你对那个文件做的任何修改都会消失 - 你只是拷贝了另一个文件来覆盖它。 除非你确实清楚不想要那个文件了，否则不要使用这个命令。<br>如果你仍然想保留对那个文件做出的修改，但是现在仍然需要撤消，将会在 <em>Git 分支</em>部分 介绍保存进度与分支；这些通常是更好的做法。<br>在git中任何<em>已提交的</em>东西总是可以恢复的。然而，你任何未提交的东西丢失后很可能再也找不回来。</p>
<h2 id="Git分支"><a href="#Git分支" class="headerlink" title="Git分支"></a>Git分支</h2><p><em>Git的分支很重要</em>,是Git区分其他版本控制系统的一个重要原因。</p>
<h3 id="分支简介"><a href="#分支简介" class="headerlink" title="分支简介"></a>分支简介</h3><p>在进行提交操作时，Git会保存一个提交对象（commit object）。该对象包括一个指向暂存内容快照的指针，作者的姓名、邮箱，和提交时所输入的信息，以及一个指向其父对象的指针。首次提交没有父对象，普通提交操作产生一个父对象，而<em>由多个分支合并产生的提交对象有多个父对象</em>。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#假设一个工作目录有三个文件分别为L,B,J，进行暂存操作，该过程会对每个文件计算一个校验和，</span></div><div class="line"><span class="comment">#然后把当前版本的文件快照报错到Git仓库中（Git使用blob对象来保存），最终将校验和加入到暂存区域等待提交：</span></div><div class="line">$ git add L B J</div><div class="line">$ git commit -m <span class="string">'The initial commit of my project'</span></div><div class="line">[master (root-commit) 27b7e34] The initial commit of my project</div><div class="line"> 3 files changed, 0 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 L</div><div class="line"> create mode 100644 B</div><div class="line"> create mode 100644 J</div></pre></td></tr></table></figure>
<ol>
<li>现在Git 仓库中有五个对象：三个 blob 对象（保存着文件快照）、一个树对象（记录着目录结构和 blob 对象索引）以及一个提交对象（包含着指向前述树对象的指针和所有提交信息）。</li>
<li>然后做些修改后再次提交，那么这次产生的提交对象会包含一个指向上次提交对象（父对象）的指针。</li>
<li>Git 的分支，其实本质上仅仅是指向提交对象的可变指针。 Git 的默认分支名字是 master。 在多次提交操作之后，你其实已经有一个指向最后那个提交对象的 master 分支。 它会在每次的提交操作中自动向前移动。<br><em>Git 的 “master” 分支并不是一个特殊分支。</em> 它就跟其它分支完全没有区别。 之所以几乎每一个仓库都有 master 分支，是因为 git init 命令默认创建它，并且大多数人都懒得去改动它。</li>
</ol>
<h4 id="分支创建与查看"><a href="#分支创建与查看" class="headerlink" title="分支创建与查看"></a>分支创建与查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#创建一个名称为testing分支，新创建的分支会在当前的提交对象上创建一个指针</span></div><div class="line">$ git branch testing</div><div class="line"><span class="comment">#可以通过git log命令查看各个分支所指的对象</span></div><div class="line">$ git <span class="built_in">log</span> --online --decorate</div></pre></td></tr></table></figure>
<h4 id="分支切换"><a href="#分支切换" class="headerlink" title="分支切换"></a>分支切换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># git checkout &lt;branch&gt;来切换（ps. git checkout --&lt;file&gt; 用来撤销对文件的修改，不过一般不用，太危险了），加一个-b可以直接创建并切换到该分支</span></div><div class="line">$ git checkout testing</div><div class="line">Switched to branch <span class="string">'testing'</span></div><div class="line"><span class="comment">#这样HEAD就指向testing分支了</span></div><div class="line">$ vim B</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">'made a change'</span></div><div class="line">$ git <span class="built_in">log</span> --online --decorate</div><div class="line">be33a7d (HEAD -&gt; testing) made a change</div><div class="line">27b7e34 (master) The initial commit of my project</div><div class="line"><span class="comment">#切换到master分支</span></div><div class="line">$ git checkout master</div><div class="line"><span class="comment">#该命令做了两件事，一是使HEAD指向master分支，二是将工作目录恢复成master分支所指向的快照内容，也就是说现在你修改的话，将相对于一个较旧的版本</span></div><div class="line"><span class="comment">#现在在master分支上改变B文件</span></div><div class="line">$ vim B</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">'made a change'</span></div><div class="line"><span class="comment">#通过下面指令输出提交历史、各个分支的指向以及项目分支交叉情况</span></div><div class="line">$ git <span class="built_in">log</span> --oneline  --decorate --graph --all</div><div class="line">* 084ec94 (HEAD -&gt; master) made a other changes</div><div class="line">| * be33a7d (testing) made a change</div><div class="line">|/</div><div class="line">* 27b7e34 The initial commit of my project</div></pre></td></tr></table></figure>
<p>由于 Git 的分支实质上仅是包含所指对象校验和（长度为 40 的 SHA-1 值字符串）的文件，所以它的*创建和销毁都异常高效。 创建一个新分支就像是往一个文件中写入 41 个字节（40 个字符和 1 个换行符），如此的简单能不快吗？</p>
<h3 id="分支的合并"><a href="#分支的合并" class="headerlink" title="分支的合并"></a>分支的合并</h3><h4 id="普通合并"><a href="#普通合并" class="headerlink" title="普通合并"></a>普通合并</h4><h4 id="遇到冲突合并"><a href="#遇到冲突合并" class="headerlink" title="遇到冲突合并"></a>遇到冲突合并</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ git merge testing</div><div class="line">Auto-merging B</div><div class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> READE</div><div class="line">Automatic merge failed; fix conflicts and <span class="keyword">then</span> commit the result.</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">You have unmerged paths.</div><div class="line">  (fix conflicts and run <span class="string">"git commit"</span>)</div><div class="line">  (use <span class="string">"git merge --abort"</span> to abort the merge)</div><div class="line"></div><div class="line">Unmerged paths:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to mark resolution)</div><div class="line"></div><div class="line">        both modified:   READE</div><div class="line"></div><div class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</div><div class="line"><span class="comment">#使用图形化工具来解决冲突，你可以运行git mergetool</span></div><div class="line">$ git mergetool</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git基础&quot;&gt;&lt;a href=&quot;#Git基础&quot; class=&quot;headerlink&quot; title=&quot;Git基础&quot;&gt;&lt;/a&gt;Git基础&lt;/h2&gt;&lt;h3 id=&quot;撤销操作-昨天没看懂的地方，没细心看。。。&quot;&gt;&lt;a href=&quot;#撤销操作-昨天没看懂的地方，没细心看。。
    
    </summary>
    
      <category term="学习笔记" scheme="http://wenjiewang.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="git" scheme="http://wenjiewang.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git learning day 1</title>
    <link href="http://wenjiewang.top/2016/08/23/gitlearn/"/>
    <id>http://wenjiewang.top/2016/08/23/gitlearn/</id>
    <published>2016-08-23T11:00:22.000Z</published>
    <updated>2016-08-29T01:37:43.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git起步"><a href="#git起步" class="headerlink" title="git起步"></a>git起步</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#配置 用户名，邮箱</span></div><div class="line">$ git config --global user.name <span class="string">"Jerry"</span></div><div class="line">$ git config --global user.email 20121954@cqu.edu.cn</div><div class="line"><span class="comment">#检查配置信息</span></div><div class="line">$ git config --list</div></pre></td></tr></table></figure>
<h3 id="帮助手册命令"><a href="#帮助手册命令" class="headerlink" title="帮助手册命令"></a>帮助手册命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#三种方法找到git使用手册</span></div><div class="line">$ git <span class="built_in">help</span> &lt;verb&gt;</div><div class="line">$ git &lt;verb&gt; --help</div><div class="line">$ man git -&lt;verb&gt;</div><div class="line"><span class="comment">#例如，想获得config命令的手册</span></div><div class="line">$ git <span class="built_in">help</span> config</div><div class="line">$ git config --help</div><div class="line">$ man git -config</div></pre></td></tr></table></figure>
<h2 id="git基础"><a href="#git基础" class="headerlink" title="git基础"></a>git基础</h2><h3 id="获取一个仓库"><a href="#获取一个仓库" class="headerlink" title="获取一个仓库"></a>获取一个仓库</h3><p>初始化一个存在的仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#初始存在的一个仓库</span></div><div class="line">$ git init</div><div class="line"><span class="comment">#指定所有文件的跟踪，也可以指定一些文件</span></div><div class="line">$ git add *</div><div class="line"><span class="comment">#将跟踪文件提交</span></div><div class="line">$ git commit -m <span class="string">'initial project version'</span></div></pre></td></tr></table></figure></p>
<p>克隆一个git仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#git clone + 路径（则生成一个仓库名的文件夹，里面为仓库的数据）</span></div><div class="line">$ git <span class="built_in">clone</span> https://github.com/LJerRRy/Hadoop.git</div><div class="line"><span class="comment">#git clone + 路径 + 名称（自己命名的）</span></div><div class="line">$ git <span class="built_in">clone</span> https://github.com/LJerRRy/Hadoop.git myhadoop</div><div class="line"><span class="comment">#上述是使用https协议，也可以ssh传输协议的</span></div></pre></td></tr></table></figure></p>
<h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p>检查文件状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#文件状态 已跟踪或未跟踪</span></div><div class="line"><span class="comment">#已跟踪的文件是指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，</span></div><div class="line"><span class="comment">#在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区（staged）。 </span></div><div class="line">$ git status</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'My World'</span> &gt; README</div><div class="line"><span class="comment">#将新建文件跟踪，或者暂存已修改文件</span></div><div class="line">$ git add README</div><div class="line"><span class="comment">#状态简览</span></div><div class="line">$ git status <span class="_">-s</span></div><div class="line"><span class="comment">#git diff 查看未暂存(unstaged)文件*具体*修改情况</span></div><div class="line">$ git diff</div><div class="line"><span class="comment">#git diff --staged查看已暂存文件修改情况==git diff --cached</span></div><div class="line">$ git diff --staged</div></pre></td></tr></table></figure></p>
<p>忽略文件（无需git管理的文件）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#新建一个.gitignore文件，然后列出要忽然的文件模式</span></div><div class="line"> $ <span class="built_in">echo</span> <span class="string">"*.log"</span> &gt;&gt; .gitignore</div><div class="line"> <span class="comment">#上面表示将.log文件忽略</span></div></pre></td></tr></table></figure></p>
<p>提交更新<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#直接用git commit 会启动文本编辑器以便输入本次提交的说明。</span></div><div class="line">$ git commit</div><div class="line"><span class="comment">#直接提交并设置本次跟新的说明</span></div><div class="line">$ git commit -m <span class="string">"此次更新的说明"</span></div><div class="line"><span class="comment">#使用git commit -a git会自动把所有已经跟踪的文件暂存起来并一起提交，跳过git add步骤</span></div><div class="line">$ git commit <span class="_">-a</span> -m</div></pre></td></tr></table></figure></p>
<p>移除文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rm README.md从暂存文件中移除，只是简单地从工作目录中手工删除文件</span></div><div class="line">$ rm README.md</div><div class="line"><span class="comment">#git rm README.md从git中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。</span></div><div class="line">$ git rm README.md</div><div class="line"><span class="comment"># 如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f</span></div><div class="line">$ git rm <span class="_">-f</span> README.md</div><div class="line"><span class="comment">#从暂存区删除</span></div><div class="line">$ git rm --cached README</div></pre></td></tr></table></figure></p>
<p>移动文件（重命名文件）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git mv file_from file_to</div><div class="line"><span class="comment">#上面一句话等价于下面三句话</span></div><div class="line">$ mv file_from file_to</div><div class="line">$ git rm file_from</div><div class="line">$ git add file_to</div></pre></td></tr></table></figure></p>
<h3 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#git log会按提交时间列出所有的更新，最近的更新排在最上面。</span></div><div class="line">$ git <span class="built_in">log</span></div><div class="line"><span class="comment">#git log 有许多选项可以帮助你搜寻你所要找的提交， 接下来我们介绍些最常用的。</span></div><div class="line"><span class="comment">#一个常用的选项是 -p，用来显示每次提交的内容差异。 你也可以加上 -2 来仅显示最近两次提交</span></div><div class="line">$ git <span class="built_in">log</span> -p -2</div><div class="line"><span class="comment">#你想看到每次提交的简略的统计信息，你可以使用 --stat 选项：</span></div><div class="line">$ git <span class="built_in">log</span> --stat</div><div class="line"><span class="comment">#--pretty选项可以指定使用不同于默认格式的方式展示提交历史</span></div><div class="line"><span class="comment">#用oneline将每个提交放在一行显示，查看的提交数很大时非常有用</span></div></pre></td></tr></table></figure>
<h3 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h3><p>看不懂！！！</p>
<h3 id="远程仓库的使用"><a href="#远程仓库的使用" class="headerlink" title="远程仓库的使用"></a>远程仓库的使用</h3><h4 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span>  https://github.com/LJerRRy/myhexo.git</div><div class="line">$ <span class="built_in">cd</span> myhexo</div><div class="line"><span class="comment">#git remote是获取给你克隆仓库服务器的默认名称</span></div><div class="line">$ git remote</div><div class="line"><span class="comment">#可以指定选项-v，显示读写远程仓库使用的Git报错的简写和其对应的URL</span></div><div class="line">$ git remote -v</div><div class="line"><span class="comment">#查看远程仓库</span></div><div class="line">$ git remote show origin</div></pre></td></tr></table></figure>
<h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">#运行git remote add &lt;shortname&gt; &lt;url&gt;添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写：</span></div><div class="line">    $ git remote add pb https://github.com/LJerRRy/myhexo.git</div><div class="line">    $ git remote -v</div><div class="line">    <span class="comment">#现在你可以在命令行中使用字符串 pb 来代替整个 URL。</span></div><div class="line">    <span class="comment">#如果你想拉取 Paul 的仓库中有但你没有的信息，可以运行git fetch pb：</span></div><div class="line">    $ git fetch pb</div><div class="line">    <span class="comment">#当你想分享你的项目时，必须将其推送到上游。</span></div><div class="line">    <span class="comment">#这个命令很简单：git push [remote-name] [branch-name]。</span></div><div class="line">    $ git push origin master</div><div class="line"><span class="comment">#### 远程仓库的移除与重命名</span></div><div class="line">    $ git remote rename pb paul</div><div class="line">    $ git remote rm paul</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git起步&quot;&gt;&lt;a href=&quot;#git起步&quot; class=&quot;headerlink&quot; title=&quot;git起步&quot;&gt;&lt;/a&gt;git起步&lt;/h2&gt;&lt;h3 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配
    
    </summary>
    
      <category term="学习笔记" scheme="http://wenjiewang.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="git" scheme="http://wenjiewang.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World Hexo</title>
    <link href="http://wenjiewang.top/2016/08/23/hello-world/"/>
    <id>http://wenjiewang.top/2016/08/23/hello-world/</id>
    <published>2016-08-23T05:35:50.580Z</published>
    <updated>2016-08-29T01:37:43.962Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="学习笔记" scheme="http://wenjiewang.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="http://wenjiewang.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>How to markdown</title>
    <link href="http://wenjiewang.top/2016/08/22/markdown/"/>
    <id>http://wenjiewang.top/2016/08/22/markdown/</id>
    <published>2016-08-21T16:48:19.000Z</published>
    <updated>2016-08-29T01:37:43.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="兼容HTML"><a href="#兼容HTML" class="headerlink" title="兼容HTML"></a>兼容HTML</h2><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。<br>要制约的只有一些 HTML 区块元素――比如&lt; div&gt;、&lt; table&gt;、&lt; pre&gt;、&lt; p&gt; 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 &lt; p&gt; 标签。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">这是一个普通段落。</div><div class="line"></div><div class="line">&lt;table&gt;</div><div class="line">    &lt;tr&gt;</div><div class="line">        &lt;td&gt;Foo&lt;/td&gt;</div><div class="line">    &lt;/tr&gt;</div><div class="line">&lt;/table&gt;</div><div class="line"></div><div class="line">这是另一个普通段落。</div></pre></td></tr></table></figure>
<h2 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h2><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。比如要链接到如下网址，必须将&amp;改为<code>&amp;amp;</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://images.google.com/images?num=30&amp;q=larry+bird</div><div class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</div></pre></td></tr></table></figure>
<p>修改后的网址才能放到链接标签的 href 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p>
<h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p>
<h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>两种方式表示标题，这里只介绍用星号。<strong>星号后一定有个空格</strong></p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section"># 标题1</span></div><div class="line"><span class="section">## 标题2</span></div><div class="line"><span class="section">### 标题3</span></div><div class="line"><span class="section">#### 标题4</span></div><div class="line"><span class="section">##### 标题5</span></div><div class="line"><span class="section">###### 标题6</span></div></pre></td></tr></table></figure>
<h4 id="区块引用-Blockquotes"><a href="#区块引用-Blockquotes" class="headerlink" title="区块引用 Blockquotes"></a>区块引用 Blockquotes</h4><p>Markdown 标记区块引用是使用类似 email 中用 &gt; 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="quote">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span></div><div class="line"><span class="quote">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span></div><div class="line"><span class="quote">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span></div><div class="line"><span class="quote">&gt; </span></div><div class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</div><div class="line"><span class="quote">&gt; id sem consectetuer libero luctus adipiscing.</span></div></pre></td></tr></table></figure>
<p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</div><div class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</div><div class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</div><div class="line"></div><div class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</div><div class="line">id sem consectetuer libero luctus adipiscing.</div></pre></td></tr></table></figure>
<p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; This is the first level of quoting.</div><div class="line">&gt;</div><div class="line">&gt; &gt; This is nested blockquote.</div><div class="line">&gt;</div><div class="line">&gt; Back to the first level.</div></pre></td></tr></table></figure>
<p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; ## 这是一个标题。</div><div class="line">&gt; </div><div class="line">&gt; 1.   这是第一行列表项。</div><div class="line">&gt; 2.   这是第二行列表项。</div><div class="line">&gt; </div><div class="line">&gt; 给出一些例子代码：</div><div class="line">&gt; </div><div class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</div></pre></td></tr></table></figure>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>无序列表使用星号、加号或是减号作为列表标记：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">*   Red</div><div class="line">*   Green</div><div class="line">*   Blue</div><div class="line">+   Red</div><div class="line">+   Green</div><div class="line">+   Blue</div><div class="line">-   Red</div><div class="line">-   Green</div><div class="line">-   Blue</div></pre></td></tr></table></figure>
<p>有序列表则使用数字接着一个英文句点：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.  Bird</div><div class="line">2.  McHale</div><div class="line">3.  Parish</div></pre></td></tr></table></figure>
<h4 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h4><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">* * *</div><div class="line"></div><div class="line">***</div><div class="line"></div><div class="line">*****</div><div class="line"></div><div class="line">- - -</div><div class="line"></div><div class="line">---------------------------------------</div></pre></td></tr></table></figure>
<h3 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h3><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p>
<p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p>
<p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字(可以为相对路劲，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">This is [<span class="string">an example</span>](<span class="link">http://example.com/ "Title"</span>) inline link.</div><div class="line"></div><div class="line">[<span class="string">This link</span>](<span class="link">http://example.net/</span>) has no title attribute.</div><div class="line"></div><div class="line">See my [<span class="string">About</span>](<span class="link">/about/</span>) page for details.</div></pre></td></tr></table></figure>
<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p><img src="http://ocdga6wo9.bkt.clouddn.com/san.jpg" alt="纲手"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![Alt text](链接)</div><div class="line">![纲手](http://ocdga6wo9.bkt.clouddn.com/san.jpg)</div></pre></td></tr></table></figure>
<h4 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h4><p>Markdown 使用星号（<em>）和底线（_）作为标记强调字词的符号，被 </em> 或 <em> 包围的字词会被转成用 <em> 标签包围，用两个 * 或 </em> 包起来的话，则会被转成 <strong>，例如：<br><strong>强调</strong><br><em>斜体</em><br>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="strong">**强调**</span></div><div class="line"><span class="emphasis">*斜体*</span></div><div class="line">\<span class="emphasis">*没用的强调、*</span></div></pre></td></tr></table></figure></strong></em></p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ol>
<li>缩进 4 个空格或是 1 个制表符<br>这是一个普通段落：</li>
</ol>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这是一个代码区块。</div></pre></td></tr></table></figure>
<ol>
<li>用 <strong>`</strong> 来框住代码</li>
</ol>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="code">`这是一个代码区块`</span></div></pre></td></tr></table></figure>
<ol>
<li>用 **<figure class="highlight plain"><figcaption><span>来框住代码</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">```markdown</div><div class="line">这是一个代码区块</div></pre></td></tr></table></figure></li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;http://example.com/&gt;</div></pre></td></tr></table></figure>
<p>Markdown 会转为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;</div></pre></td></tr></table></figure>
<h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">\   反斜线</div><div class="line">`   反引号</div><div class="line"><span class="bullet">*   </span>星号</div><div class="line">_   底线</div><div class="line">&#123;&#125;  花括号</div><div class="line">[]  方括号</div><div class="line">()  括弧</div><div class="line"><span class="section">#   井字号</span></div><div class="line"><span class="bullet">+   </span>加号</div><div class="line"><span class="bullet">-   </span>减号</div><div class="line">.   英文句点</div><div class="line">!   惊叹号</div></pre></td></tr></table></figure>
<p>本文参考<a href="http://www.appinn.com/markdown/#precode" target="_blank" rel="external">http://www.appinn.com/markdown/#precode</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;兼容HTML&quot;&gt;&lt;a href=&quot;#兼容HTML&quot; class=&quot;headerlink&quot; title=&quot;兼容HTML&quot;&gt;&lt;/a&gt;兼容HTML&lt;/h2&gt;&lt;p&gt;不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HT
    
    </summary>
    
      <category term="学习笔记" scheme="http://wenjiewang.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="markdown" scheme="http://wenjiewang.top/tags/markdown/"/>
    
  </entry>
  
</feed>
