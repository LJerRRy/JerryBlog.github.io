<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Never Git up</title>
  <subtitle>Better late than never</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wenjiewang.top/"/>
  <updated>2016-08-24T03:52:59.855Z</updated>
  <id>http://wenjiewang.top/</id>
  
  <author>
    <name>Jerry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git learning day 2</title>
    <link href="http://wenjiewang.top/2016/08/24/gitlearn2/"/>
    <id>http://wenjiewang.top/2016/08/24/gitlearn2/</id>
    <published>2016-08-24T03:07:57.000Z</published>
    <updated>2016-08-24T03:52:59.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git基础"><a href="#Git基础" class="headerlink" title="Git基础"></a>Git基础</h2><h3 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h3><p>一次提交过程，漏了几个文件未提交，此时可以运行带有<code>--amend</code>选修的提交命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line">$ git commit --amend</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git基础&quot;&gt;&lt;a href=&quot;#Git基础&quot; class=&quot;headerlink&quot; title=&quot;Git基础&quot;&gt;&lt;/a&gt;Git基础&lt;/h2&gt;&lt;h3 id=&quot;撤销操作&quot;&gt;&lt;a href=&quot;#撤销操作&quot; class=&quot;headerlink&quot; title=&quot;撤销操作&quot;
    
    </summary>
    
      <category term="学习笔记" scheme="http://wenjiewang.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="git" scheme="http://wenjiewang.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git learning day 1</title>
    <link href="http://wenjiewang.top/2016/08/23/gitlearn/"/>
    <id>http://wenjiewang.top/2016/08/23/gitlearn/</id>
    <published>2016-08-23T11:00:22.000Z</published>
    <updated>2016-08-24T02:01:46.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git起步"><a href="#git起步" class="headerlink" title="git起步"></a>git起步</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#配置 用户名，邮箱</span></div><div class="line">$ git config --global user.name <span class="string">"Jerry"</span></div><div class="line">$ git config --global user.email 20121954@cqu.edu.cn</div><div class="line"><span class="comment">#检查配置信息</span></div><div class="line">$ git config --list</div></pre></td></tr></table></figure>
<h3 id="帮助手册命令"><a href="#帮助手册命令" class="headerlink" title="帮助手册命令"></a>帮助手册命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#三种方法找到git使用手册</span></div><div class="line">$ git <span class="built_in">help</span> &lt;verb&gt;</div><div class="line">$ git &lt;verb&gt; --help</div><div class="line">$ man git -&lt;verb&gt;</div><div class="line"><span class="comment">#例如，想获得config命令的手册</span></div><div class="line">$ git <span class="built_in">help</span> config</div><div class="line">$ git config --help</div><div class="line">$ man git -config</div></pre></td></tr></table></figure>
<h2 id="git基础"><a href="#git基础" class="headerlink" title="git基础"></a>git基础</h2><h3 id="获取一个仓库"><a href="#获取一个仓库" class="headerlink" title="获取一个仓库"></a>获取一个仓库</h3><p>初始化一个存在的仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#初始存在的一个仓库</span></div><div class="line">$ git init</div><div class="line"><span class="comment">#指定所有文件的跟踪，也可以指定一些文件</span></div><div class="line">$ git add *</div><div class="line"><span class="comment">#将跟踪文件提交</span></div><div class="line">$ git commit -m <span class="string">'initial project version'</span></div></pre></td></tr></table></figure></p>
<p>克隆一个git仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#git clone + 路径（则生成一个仓库名的文件夹，里面为仓库的数据）</span></div><div class="line">$ git <span class="built_in">clone</span> https://github.com/LJerRRy/Hadoop.git</div><div class="line"><span class="comment">#git clone + 路径 + 名称（自己命名的）</span></div><div class="line">$ git <span class="built_in">clone</span> https://github.com/LJerRRy/Hadoop.git myhadoop</div><div class="line"><span class="comment">#上述是使用https协议，也可以ssh传输协议的</span></div></pre></td></tr></table></figure></p>
<h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p>检查文件状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#文件状态 已跟踪或未跟踪</span></div><div class="line"><span class="comment">#已跟踪的文件是指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，</span></div><div class="line"><span class="comment">#在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区（staged）。 </span></div><div class="line">$ git status</div><div class="line">$ <span class="built_in">echo</span> <span class="string">'My World'</span> &gt; README</div><div class="line"><span class="comment">#将新建文件跟踪，或者暂存已修改文件</span></div><div class="line">$ git add README</div><div class="line"><span class="comment">#状态简览</span></div><div class="line">$ git status <span class="_">-s</span></div><div class="line"><span class="comment">#git diff 查看未暂存(unstaged)文件*具体*修改情况</span></div><div class="line">$ git diff</div><div class="line"><span class="comment">#git diff --staged查看已暂存文件修改情况==git diff --cached</span></div><div class="line">$ git diff --staged</div></pre></td></tr></table></figure></p>
<p>忽略文件（无需git管理的文件）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#新建一个.gitignore文件，然后列出要忽然的文件模式</span></div><div class="line"> $ <span class="built_in">echo</span> <span class="string">"*.log"</span> &gt;&gt; .gitignore</div><div class="line"> <span class="comment">#上面表示将.log文件忽略</span></div></pre></td></tr></table></figure></p>
<p>提交更新<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#直接用git commit 会启动文本编辑器以便输入本次提交的说明。</span></div><div class="line">$ git commit</div><div class="line"><span class="comment">#直接提交并设置本次跟新的说明</span></div><div class="line">$ git commit -m <span class="string">"此次更新的说明"</span></div><div class="line"><span class="comment">#使用git commit -a git会自动把所有已经跟踪的文件暂存起来并一起提交，跳过git add步骤</span></div><div class="line">$ git commit <span class="_">-a</span> -m</div></pre></td></tr></table></figure></p>
<p>移除文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rm README.md从暂存文件中移除，只是简单地从工作目录中手工删除文件</span></div><div class="line">$ rm README.md</div><div class="line"><span class="comment">#git rm README.md从git中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。</span></div><div class="line">$ git rm README.md</div><div class="line"><span class="comment"># 如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f</span></div><div class="line">$ git rm <span class="_">-f</span> README.md</div><div class="line"><span class="comment">#从暂存区删除</span></div><div class="line">$ git rm --cached README</div></pre></td></tr></table></figure></p>
<p>移动文件（重命名文件）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git mv file_from file_to</div><div class="line"><span class="comment">#上面一句话等价于下面三句话</span></div><div class="line">$ mv file_from file_to</div><div class="line">$ git rm file_from</div><div class="line">$ git add file_to</div></pre></td></tr></table></figure></p>
<h3 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#git log会按提交时间列出所有的更新，最近的更新排在最上面。</span></div><div class="line">$ git <span class="built_in">log</span></div><div class="line"><span class="comment">#git log 有许多选项可以帮助你搜寻你所要找的提交， 接下来我们介绍些最常用的。</span></div><div class="line"><span class="comment">#一个常用的选项是 -p，用来显示每次提交的内容差异。 你也可以加上 -2 来仅显示最近两次提交</span></div><div class="line">$ git <span class="built_in">log</span> -p -2</div><div class="line"><span class="comment">#你想看到每次提交的简略的统计信息，你可以使用 --stat 选项：</span></div><div class="line">$ git <span class="built_in">log</span> --stat</div><div class="line"><span class="comment">#--pretty选项可以指定使用不同于默认格式的方式展示提交历史</span></div><div class="line"><span class="comment">#用oneline将每个提交放在一行显示，查看的提交数很大时非常有用</span></div></pre></td></tr></table></figure>
<h3 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h3><p>看不懂！！！</p>
<h3 id="远程仓库的使用"><a href="#远程仓库的使用" class="headerlink" title="远程仓库的使用"></a>远程仓库的使用</h3><h4 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span>  https://github.com/LJerRRy/myhexo.git</div><div class="line">$ <span class="built_in">cd</span> myhexo</div><div class="line"><span class="comment">#git remote是获取给你克隆仓库服务器的默认名称</span></div><div class="line">$ git remote</div><div class="line"><span class="comment">#可以指定选项-v，显示读写远程仓库使用的Git报错的简写和其对应的URL</span></div><div class="line">$ git remote -v</div><div class="line"><span class="comment">#查看远程仓库</span></div><div class="line">$ git remote show origin</div></pre></td></tr></table></figure>
<h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">#运行git remote add &lt;shortname&gt; &lt;url&gt;添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写：</span></div><div class="line">    $ git remote add pb https://github.com/LJerRRy/myhexo.git</div><div class="line">    $ git remote -v</div><div class="line">    <span class="comment">#现在你可以在命令行中使用字符串 pb 来代替整个 URL。</span></div><div class="line">    <span class="comment">#如果你想拉取 Paul 的仓库中有但你没有的信息，可以运行git fetch pb：</span></div><div class="line">    $ git fetch pb</div><div class="line">    <span class="comment">#当你想分享你的项目时，必须将其推送到上游。</span></div><div class="line">    <span class="comment">#这个命令很简单：git push [remote-name] [branch-name]。</span></div><div class="line">    $ git push origin master</div><div class="line"><span class="comment">#### 远程仓库的移除与重命名</span></div><div class="line">    $ git remote rename pb paul</div><div class="line">    $ git remote rm paul</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git起步&quot;&gt;&lt;a href=&quot;#git起步&quot; class=&quot;headerlink&quot; title=&quot;git起步&quot;&gt;&lt;/a&gt;git起步&lt;/h2&gt;&lt;h3 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配
    
    </summary>
    
      <category term="ProgramingLanguage" scheme="http://wenjiewang.top/categories/ProgramingLanguage/"/>
    
    
      <category term="git" scheme="http://wenjiewang.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wenjiewang.top/2016/08/23/hello-world/"/>
    <id>http://wenjiewang.top/2016/08/23/hello-world/</id>
    <published>2016-08-23T05:35:50.580Z</published>
    <updated>2016-08-23T03:13:14.524Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="hexo入门" scheme="http://wenjiewang.top/categories/hexo%E5%85%A5%E9%97%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown</title>
    <link href="http://wenjiewang.top/2016/08/22/markdown/"/>
    <id>http://wenjiewang.top/2016/08/22/markdown/</id>
    <published>2016-08-21T16:48:19.000Z</published>
    <updated>2016-08-24T02:01:46.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-to-markdown"><a href="#How-to-markdown" class="headerlink" title="How to markdown"></a>How to markdown</h2><h3 id="The-title"><a href="#The-title" class="headerlink" title="The title"></a>The title</h3><p><img src="http://ocdga6wo9.bkt.clouddn.com/san.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;How-to-markdown&quot;&gt;&lt;a href=&quot;#How-to-markdown&quot; class=&quot;headerlink&quot; title=&quot;How to markdown&quot;&gt;&lt;/a&gt;How to markdown&lt;/h2&gt;&lt;h3 id=&quot;The-title&quot;&gt;&lt;a
    
    </summary>
    
      <category term="hexo入门" scheme="http://wenjiewang.top/categories/hexo%E5%85%A5%E9%97%A8/"/>
    
    
      <category term="markdown" scheme="http://wenjiewang.top/tags/markdown/"/>
    
  </entry>
  
</feed>
